[
  {
    "slug": "translations/javascript-multiple-inheritance",
    "title": "Multiple Inheritance in JavaScript 번역",
    "date": "2024-04-28T00:00:00Z",
    "description": "Javascript에서 다중 상속을 구현하는 방법에 대한 번역 글",
    "html": "<p>이 글은 Robert Nystrom의 글 <a href=\"https://journal.stuffwithstuff.com/2011/02/21/multiple-inheritance-in-javascript/\">\"Multiple Inheritance in JavaScript\"</a>를 원작자의 허락 하에 번역한 글입니다.</p>\n<p><img src=\"/static/robert-nystrom-email-fc99e6c5.png\" alt=\"원작자와의 이메일\"></p>\n<hr>\n<p>뜨거운 가스레인지를 바라보다 보면 거기에 손을 대보고 싶은 이상한 충동을 느낄 때가 있나요? 거기 손을 대면 분명히 화상을 입겠지만, 가스레인지를 바라볼수록 그 충동은 강해집니다. 며칠 전 나도 비슷한 충동을 느꼈습니다: <em>JavaScript에서 다중 상속을 구현할 수 있을 것 같다는 생각이 들었습니다.</em></p>\n<p>비유적인 의미지만 저는 가스레인지에 손을 대보았습니다. 적어도 Firefox 4 베타에서는 다중 상속이 가능했습니다. 저는 좋은 해킹 기법을 피하지 않기에 이것이 어떻게 작동하는지 하나하나 분해해서 이 글을 통해 하나하나 보이려고 합니다(전체 내용은 <a href=\"https://github.com/munificent/multipleinheritance.js\">여기</a>에 있습니다.). 이에 더해서 이 글을 읽으면 JavaScript에서 곧 나올 멋지고 매우 잠재력이 큰 기능에 대해 알게 될 것이고, 아마도 다중 상속에 대한 생각을 바꿀 수도 있을 겁니다.</p>\n<h1 id=\"문제가-무엇인가?\">문제가 무엇인가?</h1>\n<p>본격적으로 작업을 시작하기 전에 왜 다중 상속에 대해 생각하게 되었는지 설명하도록 하겠습니다. 으레 그렇듯이 좌절이 이런 발명을 만들어냈습니다. 제가 겪은 문제는 이런 것이었습니다.</p>\n<p>위젯 라이브러리가 있다고 합시다. 이 라이브러리의 위젯 클래스 계층을 상속해서 직접 컨트롤을 만들 수 있습니다. 모든 훌륭한 21세기 클래스 라이브러리와 마찬가지로 이 라이브러리도 엄격하게 단일 상속만을 사용합니다. 왜냐하면 다중 상속은 악마이기 때문입니다. 여기 그 계층의 일부가 있습니다(모두 아스키 아트로 되어 있습니다):</p>\n<pre><code>       ┌────────┐\n       │ Widget │\n       └────┬───┘\n            │\n     ┌──────┴──────┐\n┌────┴─────┐ ┌─────┴─────┐\n│ Hideable │ │ Container │\n└──────────┘ └───────────┘\n</code></pre>\n<p>Widget은 모든 위젯이 기본적으로 상속받는 루트 클래스입니다. 이 클래스에는 이름과 같은, 모든 위젯이 필요로 하는 핵심 요소들이 있습니다. Hideable은 보이는지 여부를 토글할 수 있어야 하는 위젯들을 위한 <code>show()</code>와 <code>hide()</code> 메서드를 추가합니다. Container는 다른 자식 위젯들을 포함할 수 있는 부모 위젯을 위한 클래스입니다. <code>addChild()</code>, <code>listChildren()</code> 등의 메서드를 정의합니다.</p>\n<p>이제 저는 제 작은 위젯을 만들기 위해 왔습니다. 제가 만들 위젯은 DropDownMenu입니다. 짐작할 수 있겠지만, 이 위젯은 자식 위젯들(메뉴 아이템들)의 모음을 가지고 있습니다. 그리고 드롭다운이기 때문에 보이거나 숨길 수 있어야 합니다. 이때의 문제는 Hideable과 Container 둘 다에서 상속받을 수 없다는 것입니다.</p>\n<p>하나의 해결책은 기본 클래스(base class)들을 이렇게 재구성하는 것입니다:</p>\n<pre><code>┌────────┐\n│ Widget │\n└────┬───┘\n┌─────┴─────┐\n│ Container │\n└─────┬─────┘\n┌─────┴────┐\n│ Hideable │\n└──────────┘\n</code></pre>\n<p>이제 저는 Hideable에서 상속받기만 하면 됩니다. 하지만 바로 다음날 저는 또 새로운 위젯인 Tooltip을 만들어야 합니다. 이 위젯은 숨겨지고 보여질 수 있어야 하지만 자식 위젯은 필요하지 않습니다. 즉 Tooltip은 Hideable을 상속받아야 하지만 그렇게 되면 Container에 관련된 것들까지 모두 상속받게 되어 메모리를 낭비하게 됩니다.</p>\n<p>또한 그렇게 하면 구조를 이해하기가 복잡해진다는 더 큰 단점도 있습니다. 나중에 누군가가 제 Tooltip 클래스를 보고 Container에서 필요한 것들이 있었을 거라 생각할 수 있고, Container의 무엇이 필요했고 왜 필요했는지 파악하느라 시간을 쓸 수 있습니다. Container를 변경하는 것은 Tooltip을 망가뜨릴 수 있고 그에 반해 얻는 이득도 없습니다. 별로네요!</p>\n<p>이걸 고치기 위해 다시 구조를 정리합니다. 만약 Hideable이 필요하지만 Container는 필요하지 않은 경우가 있다면 계층 상에서 Hideable이 Container 위에 있어야 합니다. 이렇게 말입니다.</p>\n<pre><code>┌────────┐\n│ Widget │\n└────┬───┘\n┌─────┴────┐\n│ Hideable │\n└─────┬────┘\n┌─────┴─────┐\n│ Container │\n└───────────┘\n</code></pre>\n<p>아주 좋고 멋집니다. 그 다음날에 저는 새로운 위젯인 ListBox를 만들게 되었습니다. 이 위젯은 숨길 필요가 없지만 자식 위젯을 가지고 있습니다. 다시 처음 시작한 곳으로 돌아왔습니다. 이 문제에는 해결책이 없습니다.</p>\n<p><strong>단일 상속만 사용할 수 있는 상태에서는 임의의 클래스들을 결합할 수 있도록 하는 클래스 계층 구조를 만들 수 없습니다.</strong></p>\n<p>저는 제가 만드는 위젯이 상속할 \"올바른\" 클래스를 찾기 위해 많은 시간을 들였습니다. 그리고 위의 사실을 깨닫기 전까지는 제가 왜 그렇게 좌절했는지 이해하지 못했습니다. 문제는 저에게 있는 것이 아니었습니다. 사용하고 있는 라이브러리의 클래스 계층에 있는 것도 아니었습니다. 단일 상속이 충분하다는 가정이 문제였습니다.</p>\n<h1 id=\"선행-기술\">선행 기술</h1>\n<p>텍스트 에디터로 달려가기 전에, 다른 JS 클래스 시스템은 어떻게 하고 있을까요? 저는 JavaScript 라이브러리 전문가는 아닙니다. 하지만 클래스와 상속을 모방하는 것으로 보이는 라이브러리들은 프로토타입 체인을 조작하는 방식으로 이를 수행했습니다. 그리고 그런 라이브러리들은 거의 모두가 프로토타입 체인이 가지고 있는 제한인 단일 상속을 똑같이 가지고 있습니다. 이것은 단순성과 성능 측면에서 훌륭한 선택이지만, 제가 원하는 것은 아닙니다.</p>\n<p>Tom Van Cutsem의 <a href=\"https://traitsjs.github.io/traits.js-website/\">Traits.js</a>는 주목할만한 반례입니다. 이 라이브러리에서는 여러 trait들을 구성할 수 있습니다. 저는 이것이 구성 시점에 모든 trait들을 펼치는 방식으로 이루어진다고 생각합니다. 만약 두 trait A, B를 함께 구성해서 새로운 trait C를 만든 후 A에 새로운 멤버를 추가한다면, C는 그 새로운 멤버를 가지지 않습니다. 이것은 더 나아졌지만, 여전히 제가 원하는 것은 아닙니다.</p>\n<p>저는 완전히 런타임에 결합되는 방식의 다중 상속을 구현하고 싶었습니다. JavaScript의 멋진 점 하나는 기존 프로토타입을 확장할 수 있다는 것입니다. 저는 이것이 다중 상속에서도 작동하기를 원했습니다. 만약 제가 기존의 기본 클래스에 메소드를 추가한다면, 그 기본 클래스를 상속하는 모든 클래스는 그 메소드를 가져야 하는 겁니다. 심지어 제가 새로운 메서드를 정의하기 전에 해당 클래스들이 정의되었더라도 말입니다.</p>\n<h1 id=\"프로토타입-언어의-원형\">프로토타입 언어의 원형</h1>\n<p>제 목표를 감안할 때 제가 어떤 <em>종류</em>의 다중 상속 시스템을 원하는지는 여전히 명확하지 않습니다. <a href=\"https://www.parashift.com/c++-faq-lite/basics-of-inheritance.html\">C++처럼</a> 작동해야 할까요? 아니면 <a href=\"https://ruby-doc.com/docs/ProgrammingRuby/html/tut_modules.html\">Ruby의 믹스인처럼</a>? <a href=\"https://docs.scala-lang.org/tour/traits.html\">Scala의 trait처럼</a>? 물론 생각해보면 답은 하나뿐입니다...</p>\n<p>프로토타입 기반 언어의 조상이자 Eich가 JavaScript를 만드는 데 직접적인 영감을 준 언어이며, \"trait\"이라는 용어를 처음으로 사용한 언어, 이는 <a href=\"https://en.wikipedia.org/wiki/Self_(programming_language)\">Self</a>입니다. Self는 놀랍도록 간단하고도 강력한 방식으로 언어의 여러 부분들을 설계하였고, 이는 다중 상속을 다루는 방식에서도 마찬가지입니다.</p>\n<p>이것은 다음과 같이 작동합니다. 모든 객체는 JavaScript에서처럼 속성의 집합을 가집니다. 속성 이름이 별표(<code>*</code>)로 끝나면, 그것은 \"부모 속성\"으로 간주됩니다. 객체의 속성을 찾는 과정은 다음과 같습니다.</p>\n<ol>\n<li>객체가 해당 속성을 가지고 있다면, 그것을 반환합니다.</li>\n<li>그렇지 않다면, 부모 속성에서 속성을 찾습니다. 알파벳 순으로 찾아보며, 속성을 찾는 즉시 중단합니다.</li>\n</ol>\n<p>부모 속성을 확인할 때 그 부모는 다시 그들의 부모를 확인할 수 있습니다. 따라서 속성 조회는 부모 속성 그래프를 통한 깊이 우선 탐색이라 할 수 있습니다.</p>\n<p>이는 매우 단순하지만 여기서 엄청나게 많은 멋진 것들이 마법처럼 나옵니다.</p>\n<h2 id=\"단일-상속\">단일 상속</h2>\n<p>물론 단일 상속은 쉽습니다. 단 하나의 부모 속성만 가진 객체를 만들면 됩니다. JavaScript는 기본적으로 Self 디스패치의 퇴화된 경우라고 할 수 있습니다. 부모 속성의 이름이 '<code>__proto__</code>이어야 한다'는 규칙을 따르는 겁니다.</p>\n<h2 id=\"다중-상속\">다중 상속</h2>\n<p>다중 상속도 쉽습니다. 둘 이상의 부모 속성을 가지기만 하면 됩니다. 객체는 완전히 열려 있는 속성의 묶음이라고 할 수 있으므로 원하는 만큼 많은 속성을 추가할 수 있습니다.</p>\n<h2 id=\"동적-상속\">동적 상속</h2>\n<p>흥미로운 부분은 여기부터입니다. 부모를 따라가면서 속성을 찾을 때, 해당 부모 속성에 저장된 <em>값</em>을 찾습니다. 다른 속성처럼 부모 속성에도 새로운 값을 할당할 수 있습니다. 이 말은 객체의 부모를 <em>런타임에</em> 변경할 수 있다는 것입니다. 실제로 살아 있는 객체는 스스로의 클래스를 자발적으로 변경할 수 있습니다.</p>\n<p>Java에서 대규모 코드를 구현하는 데에 필요한 <a href=\"https://en.wikipedia.org/wiki/State_pattern\">전체 상태 설계 패턴</a>을 알고 계신가요? 이것은 단순히 <code>object.someParent = newState</code>입니다.</p>\n<h2 id=\"제어된-결정-순서\">제어된 결정 순서</h2>\n<p>다중 상속의 문제 중 하나는 이름 충돌이 있을 때 실제로 어떤 메서드가 호출되는지를 파악하는 것입니다. MyClass가 2개의 다른 클래스를 상속받고 그 두 클래스 모두 <code>foo()</code> 메서드를 가지고 있는 경우 <code>myObject.foo()</code>를 호출했을 때 어느 클래스의 <code>foo()</code>가 호출될까요?</p>\n<p>Self에서는 이를 쉽게 제어할 수 있습니다. 우선순위를 갖도록 하고 싶은 부모 속성이 알파벳 순서상에서 먼저 오도록 이름짓기만 하면 됩니다.</p>\n<h2 id=\"단순-생성자\">단순 생성자</h2>\n<p>다중 상속의 다른 성가신 부분은 객체 생성입니다. 각각의 기본 클래스들은 자신의 생성자를 가지고 있을 것이며 이들을 상속받은 클래스가 생성될 때 호출되어야 합니다. 각 언어들은 이를 위해 복잡하고 특별한 지원을 가지고 있을 때가 많습니다. C++의 생성자 초기화 리스트, Java의 <code>super()</code> 키워드, C#의 <code>base()</code>, 멤버 초기화를 확인하기 위한 확실한 할당 정적 분석 등등.</p>\n<p>\"기본 클래스\"가 객체의 속성에 불과하다면 생성은 단순히 몇몇 속성을 할당하는 것으로 간소화됩니다.</p>\n<h1 id=\"다시-우리의-예시로\">다시 우리의 예시로</h1>\n<p>만약 우리가 다중 상속을 마법적으로 어떻게든 작동하게 만들었다면 JavaScript에서 어떻게 보일까요?</p>\n<p>제 목표는 이렇습니다. 저는 다음과 같은 바닐라 JavaScript 코드로 몇 가지 위젯 \"기본 클래스\"들을 정의할 수 있기를 원합니다:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">  return</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Hideable</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Hideable</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">hide</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">  log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'hide '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Hideable</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">show</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">  log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'show '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Container</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">children</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [];</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Container</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">addChild</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">  log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'addChild '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() </span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\">+</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> ' to '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">children</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">push</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Container</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">listChildren</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">() {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">  log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'children for '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">  for</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> i</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#098658;--shiki-dark:#79B8FF;--shiki-darkPink:#CEC4A8\"> 0</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">; </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">i</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> &#x26;</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">lt</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">; </span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">children</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">length</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">; </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">i</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\">++</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">    log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'- '</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">children</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">[</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">i</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">].</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">  }</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span></code></pre></figure>\n<p>저는 위젯 클래스를 만들 때, 클래스마다 부모 속성의 집합을 하나씩 갖도록 하고 이 집합에 있는 모든 부모 속성들을 해당 클래스가 상속받도록 하고 싶습니다. JavaScript의 속성명에 <code>*</code>을 사용할 수 없으므로 저는 <code>_p</code>를 사용할 것입니다. 그래서 제 위젯의 생성자는 다음과 같아야 합니다:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> MyWidget</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> magic</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget_p</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\">    =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">hider_p</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\">     =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Hideable</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\">  this</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">container_p</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> Container</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">})</span></span></code></pre></figure>\n<p><code>magic</code> 이라는 약간의 부분을 제외하면 이것은 다른 JavaScript의 생성자처럼 보입니다. 그러나 이 객체를 <em>사용할</em> 때 이 객체는 부모 객체들이 제공하는 모든 메서드를 지원해야 합니다. 다시 말해서, 이것은 다음과 같이 동작해야 합니다:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> widget</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Abe'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// From Widget:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// From Hideable:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">hide</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">show</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// From Container:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">addChild</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Ben'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">));</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">addChild</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Cid'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">));</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">addChild</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Dan'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">));</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">listChildren</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span></code></pre></figure>\n<p>불가능하다고요? 계속 읽어 보세요.</p>\n<h1 id=\"프록시의-힘을-보아라\">프록시의 힘을 보아라</h1>\n<p>ECMAScript의 다음 버전의 코드네임인 <a href=\"https://en.wikipedia.org/wiki/ECMAScript_version_history#ES2015\">Harmony</a>에서 계획된 기능 중 하나는 <a href=\"https://tvcutsem.github.io/proxies_tutorial\">프록시</a> 지원입니다. 프록시는 그 이름이 암시하는 것처럼, 다른 객체를 대신하는 객체입니다. 예를 들어, 프록시 객체 <code>jamesBrown</code>이 있고 그것을 이용해 <code>jamesBrown.getOnUp()</code>을 실행하면, 런타임은 그 호출을 숨겨진 프록시 객체에 위임합니다.</p>\n<p>프록시는 그 자체로는 단순한 간접 참조 수준의 무언가일 수 있습니다. 하지만 중요한 것은 프록시가 <em>어떻게</em> 위임하는지입니다. 프록시는 <em>명령적으로</em> 위임합니다. 프록시에서 속성을 찾을 때 JavaScript는 자동으로 핸들러 객체에서 같은 이름의 속성을 찾는 게 아닙니다. 대신 요청된 속성의 이름을 가지고 그 핸들러의 특별한 <code>get</code> 메서드를 호출합니다.</p>\n<p>그 간접 참조를 통해 우리는 디스패치에 대해 완전히 <em>프로그래밍적인</em> 제어가 가능하게 되었습니다. 우리는 우리가 꿈꾸는 <em>어떤</em> 종류의 상속 체계라도 구현할 수 있습니다. 우리가 해야 할 일은 일반 객체를 우리의 상속 체계를 구현하는 핸들러를 갖는 프록시로 교체하는 것뿐입니다.</p>\n<p>Self 스타일의 부모 속성을 구현하기 위한 매우 원시적으로 조립된 핸들러는 다음과 같습니다:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> createSelfHandler</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">obj</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">  return</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">    get</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">:</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">receiver</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">, </span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">      // Look in the main object.</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">      var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> value</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> obj</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">[</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">];</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">      if</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> (</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">value</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> !==</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> undefined</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) </span><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">return</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> value</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">      // Look in the parents.</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">      // BUG: Should look in field alphabetical order.</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">      for</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> (</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> field</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> in</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> obj</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">        if</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> (</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">field</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">endsWith</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'_p'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">)) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">          value</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> obj</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">[</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">field</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">][</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">name</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">];</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">          if</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> (</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">value</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> !==</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> undefined</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) </span><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">return</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> value</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">        }</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">      }</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">      // Not found.</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">      return</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#0000FF;--shiki-dark:#79B8FF;--shiki-darkPink:#F695C6\"> undefined</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">    }</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">  };</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span></code></pre></figure>\n<p>우리가 MyWidget 클래스의 인스턴스를 생성할 때, 우리는 사실 그 프록시의 인스턴스를 얻고자 합니다. 우리는 생성자도 프록시화함으로써 이를 달성합니다.</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> magic</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">ctor</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">  var</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> callTrap</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">args</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {}</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">  var</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> constructTrap</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> function</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#E36209;--shiki-pink:#001080;--shiki-dark:#FFAB70;--shiki-darkPink:#FFAB70\">args</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">) {</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">    return</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> Proxy</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">create</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">createSelfHandler</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">        new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> ctor</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">args</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">)), </span><span style=\"--shiki-light:#005CC5;--shiki-pink:#267F99;--shiki-dark:#79B8FF;--shiki-darkPink:#E64980\">Object</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#001080;--shiki-dark:#79B8FF;--shiki-darkPink:#FFAB70\">prototype</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">  };</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#AF00DB;--shiki-dark:#F97583;--shiki-darkPink:#B197FC\">  return</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> Proxy</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">createFunction</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">ctor</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">, </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">callTrap</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">, </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">constructTrap</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">}</span></span></code></pre></figure>\n<p>짜잔! 이제 우리가 <code>new MyWidget()</code>을 실행하면 프록시 객체를 돌려받습니다. 이후 프록시 객체를 통해 어떤 속성을 조회하면 프록시는 우리의 디스패치 함수로 전환되고 이 함수는 부모 속성을 어떻게 다룰지 알고 있습니다. 당신의 브라우저에서 편하게 동작하는 Self 스타일의 다중 프로토타입입니다.</p>\n<h1 id=\"이게-좋은-아이디어인가요?\">이게 좋은 아이디어인가요?</h1>\n<p>짧게 말해서 \"아니요.\" 당연히 그렇습니다. 이 작은 해킹은 실제 코드에 도입되어서는 절대 안 됩니다. 나는 그저 그것을 동작시킬 수 있는지 확인하고 싶었습니다. 프록시는 너무나도 강력하고, 이 글에서 한 일은 그저 프록시를 통해 할 수 있는 것들의 표면을 약간 긁은 것에 불과합니다. (\"JavaScript의 Active Record\"를 들어 본 적이 있나요? 아니면 \"remote object\"는?) 하지만 이 글에서 한 것은 정말 부끄러운 해킹이고, 이를 기반으로 한 애플리케이션의 성능이 어떨지 생각하고 싶지도 않습니다.</p>\n<p>그보다 더 중요한 질문은 \"다중 상속이 좋은 아이디어인가?\"입니다. 저는 여러 해 동안 \"단일 상속 + 인터페이스\" 주의자였지만, 이제 다중 상속이 좋은 아이디어라고 느끼기 시작했습니다.</p>\n<p>프로그래머의 도구 상자에서 가장 강력한 도구 중 하나는 <em>합성</em>입니다. 기존의 부품들을 조합해서 새로운 것을 만드는 겁니다. <em>여러</em> 부분들을 조합할 수 있다는 것은 <code>n</code>개의 고유한 부품들만 가지고도 <code>2^n</code>가지의 다른 조합을 만들 수 있는 능력을 우리에게 줍니다. 특별한 이유 없이 그 힘을 포기해서는 안 됩니다.</p>\n<h1 id=\"하지만-다중-상속은-사용하기-너무-힘들어요!\">하지만 다중 상속은 사용하기 너무 힘들어요!</h1>\n<p>(역주: 원문은 \"But multiple inheritance killed my dog!\"으로, <a href=\"https://www.urbandictionary.com/define.php?term=kill%20my%20dog\">kill my dog은 화나거나 좌절스럽거나 인생에 회의를 느낄 때 쓰는 관용어구다.</a>)</p>\n<p><a href=\"http://regex.info/blog/2006-09-15/247\">고전적인 인용</a>을 변형하자면,</p>\n<blockquote>\n<p>몇몇 사람들은 문제 하나를 마주했을 때 \"음, 다중 상속을 사용하겠어\"라고 생각합니다. 이제 그들은 여러 개의 문제를 가지고 있습니다.</p>\n</blockquote>\n<p>맞습니다. 실제로 다중 상속에는 진짜로 문제가 있습니다. 하지만 내 추측으로, 그 문제들은 실제보다 과장되어 있습니다. 다중 상속에 의해 직접 상처를 받아본 백발의 C++ 프로그래머들의 수는 시간이 지남에 따라 줄어들고 있으며, 다중 상속에 관한 이야기들은 캠프파이어 자리에서 전해지는 귀신 이야기처럼 입에서 입으로 전해질수록 점점 더 끔찍함을 더해갑니다.</p>\n<p>본론으로 들어가면, 다중 상속을 사용할 때 발생하는 두 가지 주요 문제는 내가 아는 한 다음과 같습니다.</p>\n<ul>\n<li>같은 기본 클래스로 도달하는 여러 경로가 있음으로 인해서 중복 상태를 가지는 것</li>\n<li>여러 클래스가 같은 메서드를 오버라이드할 때 모호하거나 혼란스러운 디스패치를 얻는 것</li>\n</ul>\n<p>두 가지 간단한 해결책이 있습니다. <em>상태 최소화</em>와 <em>충돌 최소화</em>입니다.</p>\n<p>상태 최소화는 일반적으로 좋은 생각입니다. 우리가 마침내 함수형 프로그래밍 집단에서 배우고 있는 것처럼 말입니다. 상태가 적을수록 당신의 코드는 이해하기 쉬워집니다. 그러므로 만약 많이 상속할 것으로 예상되는 클래스를 만들고 있다면 클래스에서 정의하는 필드의 수를 최소한으로 하려고 노력하세요. 이상적인 경우라면 그 클래스는 상태를 전혀 가지지 않는 메서드의 묶음일 것입니다.</p>\n<p>충돌 최소화는 계층을 가능한 한 평평하게 유지하려고 시도함으로써 이루어질 수 있습니다. 다중 상속을 허용하는 것은 여기서 사실 <em>도움이</em> 됩니다. 다중 상속을 허용하면 리프 클래스가 여러 가지를 상속받기 위해서 단일 상속의 깊은 체인을 사용할 필요가 없기 때문입니다. 리프 클래스는 상속받아야 할 모든 것을 하나의 1차원 리스트에서 직접 상속받을 수 있습니다.</p>\n<p>응집도와 일관성을 갖춘 좋은 클래스 설계를 하는 것도 도움이 됩니다. 각각의 클래스가 하나의 작은 일을 하며 또한 오직 그것만을 수행한다면 메서드 충돌의 확률은 낮아질 것입니다. 이름 충돌이 있다면 그건 아마 좋지 않은 코드일 것입니다. 같은 이름을 갖는 개념이 왜 여러 클래스에 퍼져 있는 겁니까?</p>\n<h1 id=\"그러니-그냥-합성을-사용하세요\">그러니 그냥 합성을 사용하세요</h1>\n<p>제가 설명하는 것은 상속보다는 합성에 훨씬 더 가깝습니다. MyWidget이 구성된 방식을 보면, 우리는 말 그대로 그것을 <em>합성하고</em> 있습니다. 기본 클래스들은 MyWidget의 속성으로 직접 들어가 있습니다. 그러니 그냥 그것을 사용하는 건 어떨까요? 위의 예제가 단순히 다음과 같아지면 안되는 이유가 있나요?</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"javascript\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">var</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\"> widget</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\"> new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Abe'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">);</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// Widget에서:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">log</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">().</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getName</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">());</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// Hideable에서:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getHideable</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">().</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">hide</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">();</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"--shiki-light:#6A737D;--shiki-pink:#008000;--shiki-dark:#6A737D;--shiki-darkPink:#CAC5ED\">// Container에서:</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">widget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">getContainer</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">().</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">addChild</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#0000FF;--shiki-dark:#F97583;--shiki-darkPink:#F695C6\">new</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\"> MyWidget</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">'Ben'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">));</span></span></code></pre></figure>\n<p>이것이 보기 싫은 코드인 것을 제쳐놓더라도, 여기에는 제게 나빠 보이는 것 한 가지가 있습니다. MyWidget이 Hideable로부터 <code>hide()</code>를 받는 것은 구현 세부사항이어야 합니다. 호출하는 사람의 관점에서 <code>hide()</code>는 MyWidget이 수행할 수 있는 것으로 보여야 하고 <code>hide()</code>의 코드가 어디에 그리고 <em>어떤 방식으로</em> 정의되어 있는지는 신경쓰지 않아야 하고 신경써서는 안됩니다.</p>\n<h1 id=\"다음-단계\">다음 단계</h1>\n<p>이 모든 것은 제가 어떻게 코드를 작성할 때 무엇이 가능했으면 좋겠는지에 관한 이야기입니다. 저는 재사용 가능한 trait의 1차원 집합을 합성하는 방식으로 클래스를 구성할 수 있기를 원합니다. 저는 프레임워크 설계자들이 일부 사용자를 외면하는 방식의 취약한 계층 구조에 대해 고민하면서 몇 주를 소모하기를 원하지 않습니다. 그 대신 저는 그들이 이렇게 말할 수 있으면 좋겠습니다. \"여기 31가지 서로 다른 토핑들이 있습니다. 원하는 대로 섞어보세요.\"</p>\n<p>동시에 저는 그런 trait과 믹스인 같은 것들이 자체적으로 확장 가능하게 하고 싶습니다. 예를 들어 모든 순회 가능한 컬렉션 클래스가 상속받는 \"enumerable\" trait가 있다고 해봅시다. 저는 그 클래스에 <code>map()</code>이나 <code>fold()</code> 같은 메서드를 곧바로 추가할 수 있으면 좋겠습니다. <code>Collections.max(someEnumerable)</code> 같은 <a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html\">못생기고 쓸모없는 헬퍼 클래스</a>로 넘어가지 않고도 제 코드베이스의 모든 <em>enumerable</em> 클래스에서 그 메서드들을 사용할 수 있도록 말입니다.</p>\n<p>더 적은 보일러플레이트, 더 적은 복사/붙여넣기, 더 평탄한 계층 구조, 더 나은 합성 가능성. 그것이 제가 목표로 하는 것입니다.</p>\n<h1 id=\"참고\">참고</h1>\n<p><a href=\"https://journal.stuffwithstuff.com/2011/02/21/multiple-inheritance-in-javascript/\">https://journal.stuffwithstuff.com/2011/02/21/multiple-inheritance-in-javascript/</a></p>",
    "headingTree": [
      {
        "title": "문제가 무엇인가?",
        "url": "#문제가-무엇인가?",
        "items": []
      },
      {
        "title": "선행 기술",
        "url": "#선행-기술",
        "items": []
      },
      {
        "title": "프로토타입 언어의 원형",
        "url": "#프로토타입-언어의-원형",
        "items": [
          {
            "title": "단일 상속",
            "url": "#단일-상속",
            "items": []
          },
          {
            "title": "다중 상속",
            "url": "#다중-상속",
            "items": []
          },
          {
            "title": "동적 상속",
            "url": "#동적-상속",
            "items": []
          },
          {
            "title": "제어된 결정 순서",
            "url": "#제어된-결정-순서",
            "items": []
          },
          {
            "title": "단순 생성자",
            "url": "#단순-생성자",
            "items": []
          }
        ]
      },
      {
        "title": "다시 우리의 예시로",
        "url": "#다시-우리의-예시로",
        "items": []
      },
      {
        "title": "프록시의 힘을 보아라",
        "url": "#프록시의-힘을-보아라",
        "items": []
      },
      {
        "title": "이게 좋은 아이디어인가요?",
        "url": "#이게-좋은-아이디어인가요?",
        "items": []
      },
      {
        "title": "하지만 다중 상속은 사용하기 너무 힘들어요!",
        "url": "#하지만-다중-상속은-사용하기-너무-힘들어요!",
        "items": []
      },
      {
        "title": "그러니 그냥 합성을 사용하세요",
        "url": "#그러니-그냥-합성을-사용하세요",
        "items": []
      },
      {
        "title": "다음 단계",
        "url": "#다음-단계",
        "items": []
      },
      {
        "title": "참고",
        "url": "#참고",
        "items": []
      }
    ],
    "url": "/translations/javascript-multiple-inheritance",
    "thumbnail": {
      "local": "/static/robert-nystrom-email-fc99e6c5.png"
    }
  },
  {
    "slug": "translations/the-real-novelty-of-the-arpanet",
    "title": "ARPANET의 진정한 위대함",
    "date": "2024-12-25T00:00:00Z",
    "description": "Two-Bit History의 The Real Novelty of the ARPANET 번역",
    "html": "<p>이 글은 Two-Bit History의 \"The Real Novelty of the ARPANET\"을 원작자의 허락 하에 번역한 것입니다. 원문은 <a href=\"https://twobithistory.org/2021/02/07/arpanet.html\">여기</a>에서 읽을 수 있습니다.</p>\n<p>메리 크리스마스</p>\n<h1 id=\"the-real-novelty-of-the-arpanet\">The Real Novelty of the ARPANET</h1>\n<p>만약 \"ARPANET\"이라는 단어로 이미지를 검색해 본다면 1960년대 후반에서 1970년대 초반 동안 <a href=\"https://en.wikipedia.org/wiki/ARPANET\">정부 연구 네트워크</a>가 어떻게 미국 전역으로 꾸준히 확장되었는지를 보여주는 다양한 지도를 보게 될 것이다. 난 ARPANET에 대해 처음 접하는 대부분의 사람들이 이런 지도 중 하나를 접하게 될 거라고 생각한다.</p>\n<p>이런 지도들은 분명 흥미롭다. 모든 컴퓨터들의 위치를 단순한 지도 한 장에 모두 표현할 수 있을 정도로 네트워크에 연결된 컴퓨터들의 수가 적었던 시절이 있었다는 사실은 믿기 힘들 정도다. (굉장히 단순한, 1960년대의 오버헤드 프로젝터로 비추는 다이어그램을 이야기하는 것이다) 하지만 이 지도들의 문제는 대륙을 가로지르는 굵은 선들로 그려져 있어서 ARPANET의 가장 중요한 업적이 미국 전역에 있는 컴퓨터들을 연결한 것이라는 인식을 강화한다는 점이다.</p>\n<p>오늘날 인터넷은 우리를 서로 연결해 주는 생명선과도 같다. 공기 중으로 퍼지는 바이러스로 인해 모두가 실내에 갇혀 있는 상황에서도 말이다. 그래서 만약 인터넷이 ARPANET에서 온 거라면, ARPANET 이전의 세상은 완전히 단절된 상태였을 거라고 상상하기 쉽다. 오늘날 만약 인터넷이 없어진다면 우리가 놓일 상황이 그러할 테니까 말이다. 그렇다고 한다면 ARPANET은 그 이전에는 불가능했던, 컴퓨터를 통한 사람들의 연결을 가능하게 했다는 점에서 중요한 사건이었을 것이다.</p>\n<p>하지만 이런 관점은 역사를 제대로 이해하지 못한 것이다. 이런 관점은 또한 ARPANET이 진정으로 혁신적이었던 부분을 과소평가하는 것이다.</p>\n<h1 id=\"arpanet의-등장\">ARPANET의 등장</h1>\n<p>워싱턴 힐튼 호텔은 내셔널 몰에서 북동쪽으로 약 1.5마일 떨어진 작은 언덕 꼭대기 근처에 위치하고 있다. 이 호텔은 두 개의 현대적인 흰색 외관이 넓은 반원형으로 펼쳐져 마치 새의 날개를 연상시킨다. 1965년 이 호텔의 완공을 보도한 뉴욕 타임스는 이 건물이 \"언덕 꼭대기에 둥지를 튼 갈매기처럼 보인다\"고 묘사했다.<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1</a></sup></p>\n<p>이 호텔의 가장 유명한 특징은 지하에 숨겨져 있다. 차도가 둘러싸고 있는 둥근 공간 아래에는 인터내셔널 볼룸(International Ballroom)이라는 거대한 타원형 행사장이 있다. 이곳은 오랜 시간 동안 워싱턴 D.C.에서 가장 큰 기둥 없는 연회장으로 알려졌다. 1967년에는 이곳에서 도어스(역자: 1967년부터 1971년까지 전성기를 누린 LA 출신의 전설적인 사이키델릭 록 밴드)가 공연을 열었고, 1968년에는 지미 헨드릭스가 공연을 가졌다. 그리고 1972년에는 조금 더 차분한 행사가 이 연회장을 장악했다. 바로 첫 번째 국제 컴퓨팅 통신 회의(International Conference on Computing Communication, ICCC)가 이곳에서 열렸다. 바로 여기서 유망한 연구 프로젝트였던 ARPANET이 처음으로 대중 앞에 공개되었다.</p>\n<p>1972년 ICCC는 10월 24일부터 26일까지 진행되었으며 약 800명이 참석했다.<sup><a href=\"#user-content-fn-2\" id=\"user-content-fnref-2\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup> 이 행사는 컴퓨터 네트워킹이라는 신생 분야의 모든 주요 연구자들을 한데 모았다. 인터넷의 선구자인 밥 칸(Bob Kahn)에 따르면, \"만약 누군가가 워싱턴 힐튼 호텔에 폭탄을 떨어뜨렸다면, 당시 미국의 네트워킹 커뮤니티 대부분이 파괴되었을 거에요.\"<sup><a href=\"#user-content-fn-3\" id=\"user-content-fnref-3\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">3</a></sup></p>\n<p>그러나 참석자들 전부가 컴퓨터 과학자였던 건 아니다. 이 회의에 대한 홍보에서는 이 행사가 \"사용자 중심\"이며 \"엔지니어와 통신 전문가뿐 아니라 법률가, 의료 전문가, 경제학자, 정부 관계자\"를 위한 것이라고 이야기했다.<sup><a href=\"#user-content-fn-4\" id=\"user-content-fnref-4\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">4</a></sup> \"데이터 네트워크 설계 문제 I\"과 그 후속 세션 \"데이터 네트워크 설계 문제 II\"같은 일부 세션은 매우 기술적이었다. 하지만 대부분의 세션은 홍보에서 예고한 대로 컴퓨터 네트워킹의 잠재적인 사회적/경제적 효과에 초점이 맞춰져 있었다. 오늘날에 보면 무시무시한 선견지명이 있었던 한 발표는 \"컴퓨터 데이터 은행에서 개인의 권리를 안전하게 보호하기 위해\" 법률 시스템이 사전에 어떤 조치를 취할 수 있을지에 대한 논의를 발전시키고자 했다.<sup><a href=\"#user-content-fn-5\" id=\"user-content-fnref-5\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">5</a></sup></p>\n<p>ARPANET의 시연 의도는 참석자들을 위한 일종의 부가적인 볼거리였다. 인터내셔널 볼룸이나 호텔 하층부의 다른 공간에서 열리는 세션들 사이에 참석자들은 조지타운 볼룸(더 큰 볼룸에서 복도를 따라 내려가면 나오는 더 작은 볼룸/회의실)에 들를 수 있었다.<sup><a href=\"#user-content-fn-6\" id=\"user-content-fnref-6\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">6</a></sup> 거기에는 다양한 제조사의 단말기의 터미널 40대가 설치되어 있었고 ARPANET에 접속할 수 있도록 준비되어 있었다.<sup><a href=\"#user-content-fn-7\" id=\"user-content-fnref-7\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">7</a></sup> 이 단말기들은 덤 터미널(dumb terminal)이었다. 덤 터미널이란 입력과 출력만 처리할 수 있고 자체적인 계산은 수행할 수 없는 기기였다. (사실 1972년 당시 이 터미널들은 하드카피 터미널이었을 가능성이 높다. - 역자: 텔레타이프 머신이라고도 하는데 오늘날의 컴퓨터처럼 화면에 터미널 메시지가 출력되는 게 아니라 출력물을 통해 터미널을 사용할 수 있는 기기였다) 이 터미널들은 모두 TIP(Terminal Interface Message Processor)이라고 불리는, 방 중앙에 위치한 단 위에 있는 컴퓨터에 연결되어 있었다. TIP는 덤 터미널을 ARPANET에 연결하기 위해 특별히 설계된 초기 라우터 유형이었다. ICCC 참석자들은 터미널들과 TIP을 이용해 ARPANET을 구성하던 29개의 호스트 사이트 중 일부에 로그인하고 접근하는 실습을 해볼 수 있었다.<sup><a href=\"#user-content-fn-8\" id=\"user-content-fnref-8\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">8</a></sup></p>\n<p>네트워크가 가진 능력을 선보이기 위해 전국의 호스트 지점에 있던 연구자들은 사용자들이 실습해 볼 수 있는 19개의 간단한 \"시나리오\"를 준비하기 위해 협력했다. 이 시나리오들은 <a href=\"https://archive.computerhistory.org/resources/access/text/2019/07/102784024-05-001-acc.pdf\">소책자</a>로 만들어져서, 배선과 터미널의 미로로 조심스럽게 접근하는 회의 참석자들에게 배포되었다.<sup><a href=\"#user-content-fn-9\" id=\"user-content-fnref-9\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">9</a></sup> 이 시나리오들은 새로운 기술이 작동할 뿐 아니라 유용하다는 것을 증명하기 위한 목적이 있었다. 당시 ARPANET은 \"차가 없는 고속도로\"와 같았고 이를 지원하던 국방부는 이러한 ARPANET의 공개 시연이 네트워크에 대한 더 큰 관심을 불러일으키기를 기대했다.<sup><a href=\"#user-content-fn-10\" id=\"user-content-fnref-10\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">10</a></sup></p>\n<p>이 시나리오들은 ARPANET을 통해 접근할 수 있는 다양한 소프트웨어를 선보였다. 여기에는 프로그래밍 언어 인터프리터가 포함되어 있었다. MIT의 Lisp 기반 언어 인터프리터와 UCLA에서 제공한 Speakeasy라는 수치 계산 환경을 위한 언어의 인터프리터 등이었다. 체스 프로그램과 콘웨이의 생명 게임(Conway’s Game of Life) 등의 게임 프로그램도 있었다. 아마 회의 참석자들에게 가장 인기있었던 것은 인공지능 대화 프로그램들이었다. 여기에는 MIT의</p>\n<p>여기에는 프로그래밍 언어 인터프리터가 포함되어 있었는데, MIT의 Lisp 기반 언어와 UCLA에서 제공한 Speakeasy라는 수치 계산 환경이 있었다. 또한 게임 프로그램도 있었는데, 체스 프로그램과 Conway의 생명 게임 구현이 포함되었다. 그리고 아마도 회의 참석자들에게 가장 인기 있었던 것은 여러 인공지능 대화 프로그램이었다. 여기에는 MIT의 조셉 와이젠바움(Joseph Weizenbaum)이 개발한 유명한 ELIZA 대화 프로그램도 포함되어 있었다.</p>\n<p>시나리오를 준비한 연구자들은 사용자가 터미널에서 입력해야 할 각 명령어를 신중히 정리했다. 이는 특정 ARPANET 호스트에 연결하기 위해 사용하는 명령어의 순서가 호스트에 따라 달라질 수 있었기 때문에 매우 중요한 작업이었다. 예를 들어 MIT 인공지능 연구소의 PDP-10 미니컴퓨터에서 호스팅된 AI 체스 프로그램을 실습해 보고자 하는 회의 참석자들은 다음과 같은 명령어를 입력하도록 안내받았다.</p>\n<p><em>아래에 있는 <code>[LF]</code>, <code>[SP]</code>, <code>[CR]</code>은 각각 줄 바꿈(Line Feed), 공백(Space), 캐리지 리턴(Carriage Return) 키를 의미한다. 각 명령어에 대한 설명은 <code>//</code> 뒤에 덧붙여져 있지만 <code>//</code>가 원문에서 사용된 주석 형식은 아니다.</em></p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"bash\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"bash\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@r</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [LF]                   // Reset the TIP</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@e</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] r [LF]            // TIP 대신 호스트에 문자를 출력(</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#795E26;--shiki-dark:#79B8FF;--shiki-darkPink:#4DABF7\">echo</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">)하는 </span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">\"Echo remote\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> 설정</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@L</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] 134 [LF]          // 번호 134인 호스트에 연결</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">Connect</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> to</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> host</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> number</span><span style=\"--shiki-light:#005CC5;--shiki-pink:#098658;--shiki-dark:#79B8FF;--shiki-darkPink:#CEC4A8\"> 134</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">:login</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] iccXXX [CR]   // MIT AI Lab의 시스템에 로그인, </span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">\"XXX\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">는 사용자의 이니셜</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">:chess</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [CR]               // 체스 프로그램 실행</span></span></code></pre></figure>\n<p>회의 참석자들이 해당 명령어를 성공적으로 입력하면 당시로서는 가장 최첨단이었던 체스 소프트웨어를 직접 사용해볼 수 있었다. 체스 보드의 레이아웃은 다음과 같이 표시되었다:</p>\n<pre><code>BR BN BB BQ BK BB BN BR\nBP BP BP BP ** BP BP BP\n-- ** -- ** -- ** -- **\n** -- ** -- BP -- ** --\n-- ** -- ** WP ** -- **\n** -- ** -- ** -- ** --\nWP WP WP WP -- WP WP WP\nWR WN WB WQ WK WB WN WR\n</code></pre>\n<p>반면 UCLA의 IBM System/360에 연결하고 Speakeasy 수치 계산 환경을 실행하려면 회의 참석자들은 다음과 같은 명령어를 입력해야 했다:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"bash\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"bash\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@r</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [LF]                   // Reset the TIP</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@t</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] o [SP] L [LF]     // </span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">\"Transmit on line feed\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> setting</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@i</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] L [LF]            // </span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">\"Insert line feed\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> setting, i.e. send line feed with each carriage return</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">@L</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] 65 [LF]           // Connect to host number 65</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">tso</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">                       //</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> Connect</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> to</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> IBM</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> Time-Sharing</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> Option</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> system</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">logon</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [SP] icX [CR]       // Log in with username, where </span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\">\"X\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> should be a freely chosen digit</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">iccc</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [CR]                 // This is the password (</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">so</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> secure!</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">)</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">speakez</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> [CR]              // Start Speakeasy</span></span></code></pre></figure>\n<p>이런 명령어들을 성공적으로 실행하면 참석자들은 그들이 터미널에 행렬을 입력하는 속도만큼이나 빠르게 행렬을 곱하거나 전치(transpose)하는 등의 연산을 수행할 수 있었다.</p>\n<pre><code>:+! a=m*transpose(m);a [CR]\n:+! eigenvals(a) [CR]\n</code></pre>\n<p>많은 참석자들은 이 시연에 깊은 인상을 받았다. 하지만 우리가 오늘날의 시점에서 예상할 법한 이유 때문은 아니었다. 우리가 여기서 이해해야 할 중요한 맥락은 1972년에도 원격으로 컴퓨터를 사용하는 것이 새로운 일이 아니었다는 것이다. 다른 도시에 있는 컴퓨터에 접속하는 것도 마찬가지로 1972년에 그다지 새로운 일이 아니었다. 텔레타이프 장치가 멀리 떨어져 있는 컴퓨터와 통신하는 데 사용된 지 10년도 넘은 시점이었다. ICCC가 열리기 만으로 5년쯤 전에 시애틀의 고등학교에 다니던 빌 게이츠는 도시 반대편에 있는 제너럴 일렉트릭 컴퓨터에서 그의 첫 번째 BASIC 프로그램을 실행하고 있었다. 호스트 컴퓨터에 로그인해 몇 가지 명령을 실행하거나 텍스트 기반 게임을 즐기는 일은 그 당시에 이미 일상적이었다. 여기서 선보인 소프트웨어는 꽤 흥미로웠지만, 지금까지 두 가지 시나리오에 대해 언급한 내용들은 ARPANET 없이도 당시에 충분히 가능했던 일들이었다.</p>\n<p>물론 내부 원리에서는 새로운 부분들이 있었다. ICCC에 참석한 법률가, 정책 입안자, 경제학자들은 아마 기발한 체스 프로그램과 챗봇에 감탄했을 것이다. 하지만 네트워킹 전문가들에게 더 관심을 끌었던 것은 ARPANET 프로젝트가 무엇을 이루어냈는지에 대해 더 잘 보여준 두 가지 다른 시나리오였다.</p>\n<p>그 첫번째 시나리오는 MIT의 ITS 운영체제에서 실행되는 <code>NETWRK</code>라는 프로그램에 대한 거였다. <code>NETWRK</code> 명령어는 ARPANET의 운영 상태에 관한 다양한 부분을 보고할 수 있는 여러 하위 명령어의 진입점이었다. <code>SURVEY</code> 하위 명령어는 네트워크에서 작동 중이며 사용 가능한 호스트를 보고했다. 모든 호스트는 단일 목록에 담겼다. 그리고 <code>SUMMARY.OF.SURVEY</code> 하위 명령어는 이전에 실행된 <code>SURVEY</code> 결과를 집계하여 각 호스트의 \"가동률(up percentage)\"과 각 호스트가 메시지에 응답하는 데 걸린 평균 시간을 보고했다. <code>SUMMARY.OF.SURVEY</code> 하위 명령어의 출력 결과는 다음과 같은 표로 표시되었다.</p>\n<pre><code>--HOST--  -#-  -%-UP-  -RESP-\nUCLA-NMC  001  097%    00.80\nSRI-ARC   002  068%    01.23\nUCSB-75   003  059%    00.63\n...\n</code></pre>\n<p>호스트 번호 필드는 보시다시피 최대 세 자리 숫자만 입력할 수 있도록 되어 있었다(하!). 다른 <code>NETWRK</code> 하위 명령어를 사용하면 더 긴 기간에 걸친 조사 결과를 요약한 걸 확인하거나 특정 호스트의 조사 결과 로그를 자세히 살펴볼 수도 있었다.</p>\n<p>두 번째 시나리오는 스탠포드에서 개발중이던 SRI-ARC 온라인 시스템이라는 소프트웨어였다. 이건 다양한 기능을 갖춘 정교한 시스템이었는데(더글러스 엥겔바트(Douglas Engelbart)가 \"모든 데모의 어머니\"라고 불리는 시연에서 보여주었던 바로 그 소프트웨어 시스템이었다) 이 시스템의 여러 기능 중 하나는 UC 산타바바라의 호스트에서 실행되는 기본적인 파일 호스팅 서비스를 활용하는 것이었다. 회의 참석자들은 워싱턴 힐튼의 터미널에서 <code>copy</code> 명령어를 실행하고 컴퓨터가 던지는 몇 가지 질문에 답하면 스탠포트에서 생성된 파일을 UCSB 호스트로 복사할 수 있었다.</p>\n<p>다음 코드의 <code>[ESC]</code>, <code>[SP]</code>, 그리고 <code>[CR]</code>은 각각 이스케이프, 공백, 그리고 캐리지 리턴(carriage return) 키를 의미한다. 괄호 안의 단어는 컴퓨터가 출력하는 프롬프트다. 세 번째 줄에서는 이스케이프 키를 사용해 파일 이름을 자동 완성한다. 여기서 복사되는 파일은 <code>&#x3C;system>sample.txt;1</code>이라고 불렸다. 끝에 붙은 숫자 1은 버전 번호를 나타내고 <code>&#x3C;system></code>은 디렉터리를 나타낸다. 이 파일 이름 규칙은 TENEX 운영 체제에서 사용되던 것이다.<sup><a href=\"#user-content-fn-11\" id=\"user-content-fnref-11\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">11</a></sup></p>\n<pre><code>@copy\n(TO/FROM UCSB) to\n(FILE) &#x3C;system>sample [ESC] .TXT;1 [CR]\n(CREATE/REPLACE) create\n</code></pre>\n<p>이 두 가지 시나리오는 처음에 보았던 두 가지 시나리오와 별로 달라 보이지 않을 수 있다. 하지만 이건 사실 매우 놀라운 것이었다. ARPANET에서는 인간이 컴퓨터와 소통할 수 있을 뿐만 아니라 <em>컴퓨터들끼리도</em> 소통할 수 있다는 것을 분명히 보여줬기 때문이다. <code>SURVEY</code> 명령어에 의해 MIT에서 수집된 결과는 사람이 매번 각 기계에 로그인해서 가동 상태를 확인하여 만들어진 게 아니다. 이 결과는 네트워크 상에 있는 다른 기계들과 어떻게 소통해야 하는지 알고 있는 프로그램이 수집한 것이었다. 마찬가지로, 스탠포드에서 UCSB로의 파일 전송도 스탠포드나 UCSB 터미널에서 사람이 어떤 조작을 가한 것이 아니었다. 워싱턴 D.C.에 있는 터미널 사용자가 소프트웨어를 실행하기만 하면 두 컴퓨터가 서로 소통하여 파일을 전송할 수 있었다. 더 놀라운 점은 인터내셔널 볼룸에 있었던 40개의 단말기 중 어떤 것을 사용하든 상관없이 거의 똑같은 명령어 입력을 통해 MIT의 네트워크 모니터링 통계 확인이나 UCSB에 파일을 저장하는 동작을 할 수 있었다는 점이다.</p>\n<p>이것이 ARPANET에서 완전히 새로웠던 부분이다. ICCC의 시연은 단순히 인간이 원격으로 컴퓨터와 통신하는 것이나 원격 입출력(remote I/O)을 시연한 게 아니었다. 이건 소프트웨어가 원격으로 다른 소프트웨어와 소통할 수 있다는 것에 대한 시연이었고, 이것은 그 전까지 아무도 본 적이 없는 것이었다.</p>\n<p>ARPANET 프로젝트에서 중요했던 부분이 호스트의 지도에 그려져 있던 전국에 걸친 컴퓨터들의 물리적인 연결(어차피 그건 임대된 전화선들이었고 그런 연결은 이미 전부터 존재하고 있었다)이 아니라 소프트웨어 간의 소통이라는 것을 이해하기 위해서는 1966년 ARPANET 프로젝트가 시작되기 전의 상황을 생각해 보아야 한다. 당시 펜타곤(역자: 미국 국방부)의 ARPA 사무실에는 터미널 룸이라는 게 있었다. 거기에는 3개의 터미널이 있었는데 이들은 각각 다른 장소에 있는 다른 제조사의 컴퓨터와 연결되어 있었다. 하나는 MIT에, 하나는 UC 버클리에, 그리고 하나는 산타모니카에 있었다.<sup><a href=\"#user-content-fn-12\" id=\"user-content-fnref-12\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">12</a></sup> 워싱턴 D.C.에서도 이 세 컴퓨터를 사용할 수 있다는 점은 ARPA 직원들에게 편리한 일이었다. 반면 불편했던 점은 3개의 각각 다른 제조사 컴퓨터를 구매하고 유지보수하고 3개의 다른 로그인 절차를 기억해야 했으며 3가지 다른 컴퓨터 환경에 익숙해져야 한다는 것이었다. 이 터미널들은 나란히 놓여 있었지만 사실상 배선으로 연결되어 있는 호스트 컴퓨터의 확장이었고, 그들은 다른 제조사의 컴퓨터들이었기에 서로 다르게 작동했다. 원격으로 컴퓨터와 통신하는 건 ARPANET 이전에도 가능했다. 문제는 컴퓨터 시스템들 간에 호환되지 않는 부분들(heterogeneity)이 통신의 복잡성을 제한했다는 점이었다.</p>\n<h1 id=\"바로-지금-모두-모여서\">바로 지금, 모두 모여서</h1>\n<p>여기서 강조하고 싶은 것은 다음 2가지 설명 사이에는 중요한 차이가 있다는 것이다.</p>\n<ul>\n<li>설명 A: ARPANET은 최초로 컴퓨터를 통해 서로 다른 지역에 있는 사람들을 연결했다.</li>\n<li>설명 B: ARPANET은 최초로 컴퓨터 시스템 간의 연결을 가능하게 했다.</li>\n</ul>\n<p>이건 사소한 부분을 따지는 것처럼 보일 수도 있지만, A는 중요한 역사를 생략하는 설명이다.</p>\n<p>먼저, 역사학자 조이 리시 랜킨(Joy Lisi Rankin)은 ARPANET이 등장하기 이전부터 사람들이 사이버 공간에서 소통하고 있었다는 사실을 밝혀냈다. 랜킨의 저서 <em>A People’s History of Computing in the United States</em>를 보면 시분할 네트워크(time-sharing network) 상에 존재했던 여러 디지털 커뮤니티를 설명한다. 이들은 ARPANET 이전에 혹은 ARPANET과 독립적으로 존재했다. 이런 시분할 네트워크는 엄밀히 말하면 컴퓨터 네트워크는 아니었다. 어딘가의 지하실에 있는 하나의 메인프레임 컴퓨터가 계산을 처리하고, 여러 덤 터미널을 통해 그 계산 능력을 제공하는 구조였기 때문이다. 이는 미국 전역으로 촉수를 뻗은 뚱뚱한 지하 생물 같은 거였다. 그러나 이런 시스템들은 오늘날 \"네트워크\"라는 단어가 함축하고 있는 대부분의 사회적 행동들을 가능하게 해줬다.</p>\n<p>예를 들어 다트머스 시분할 시스템을 북동부 지역의 대학교와 고등학교들로 확장한 키위트 네트워크(Kiewit Network)에서는 고등학생들이 협업하여 \"가십 파일(gossip file)\"을 유지했다. 이를 통해 학생들은 협력하여 다른 학교에서 일어난 흥미로운 사건들을 기록하고 유지하며 \"코네티컷에서 메인까지 이어진 사회적 연결\"을 만들었다.<sup><a href=\"#user-content-fn-13\" id=\"user-content-fnref-13\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">13</a></sup> 한편, 마운트 홀리오크 대학(Mount Holyoke College)의 여성들은 네트워크를 통해 다트머스 대학의 남성들과 소통했으며, 어쩌면 데이트를 주선하거나 남자친구와 연락을 유지했을지도 모른다.<sup><a href=\"#user-content-fn-14\" id=\"user-content-fnref-14\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">14</a></sup> 이 모든 일이 1960년대에 이미 벌어지고 있었다. 랜킨은 시분할 네트워크를 통한 이런 교류를 무시한다면 지난 50년간 미국 디지털 문화의 발전을 이해하는 데 필요한 것들을 놓치게 될 수 있다고 주장한다. 이는 \"실리콘밸리 신화(Silicon Valley mythology)\"를 강화하여, 모든 것을 소수 창업자들의 개인적 천재성에만 돌리는 서사를 만들게 된다.</p>\n<p>ARPANET으로 돌아오자. 컴퓨터를 물리적으로 연결하는 것이 아니라 컴퓨터 <em>시스템</em>들을 연결하는 것이 핵심이었다는 걸 이해하면 ARPANET의 혁신적인 이야기를 할 때 강조할 내용이 달라질 수 있다. ARPANET은 최초의 패킷 교환 네트워크였으며, 이를 실현하기 위해 엄청난 공학적 노력이 투입되었다. 하지만 ARPANET이 단순히 최초의 패킷 교환 네트워크였기 때문에 혁신적이었다고만 말하고 그치는 건 큰 실수라고 생각한다. ARPANET은 전국의 컴퓨터 과학자들이 더 쉽게 협력할 수 있도록 하는 의도였다. ARPANET은 매사추세츠와 캘리포니아 간에 데이터를 효율적으로 주고받는 방법에 대한 것이기도 했지만, 서로 다른 운영체제와 다양한 언어로 작성된 프로그램들이 서로 어떻게 상호작용할 수 있는지에 대한 것이기도 했다. 즉 ARPANET은 최초의 패킷 교환 네트워크였을 뿐 아니라 놀라운 표준화 성공 사례이기도 했다. 이 점은 내게 특히 흥미로웠다. 내가 실패한 표준들에 대하여 여러 번 글을 썼기 때문이다.(<a href=\"https://twobithistory.org/2018/05/27/semantic-web.html\">글1</a> <a href=\"https://twobithistory.org/2018/12/18/rss.html\">글2</a> <a href=\"https://twobithistory.org/2020/01/05/foaf.html\">글3</a>)</p>\n<p>ARPANET을 위한 프로토콜의 개발은 그 당시에도 부수적인 작업으로 간주되었다. 따라서 자연스럽게 대부분 대학원생들로 이루어진 그룹에 맡겨졌다. 이 그룹은 1968년 8월에 UC 산타바바라에서 첫 미팅을 가졌으며<sup><a href=\"#user-content-fn-15\" id=\"user-content-fnref-15\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">15</a></sup> 이후 네트워크 작업 그룹(Network Working Group)으로 알려지게 되었다. 이 첫 회의에는 12명이 참석했으며 대부분은 이후 장비가 준비되었을 때 ARPANET의 첫 호스트 지점이 될 4개의 대학을 대표하는 사람들이었다.<sup><a href=\"#user-content-fn-16\" id=\"user-content-fnref-16\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">16</a></sup> 당시 UCLA 대학원생이었던 스티브 크로커(Steve Crocker)는 이 회의에 참석했었다. 그는 나와의 Zoom 통화에서 그 첫 회의가 모두 젊은 남성들로 구성되어 있었으며 회의를 주재한 엘머 샤피로(Elmer Shapiro)가 38살 정도로 아마도 가장 나이가 많은 사람이었을 것이라고 말했다. ARPA는 컴퓨터들이 연결된 후 컴퓨터들이 서로 어떻게 소통할지를 정할 책임자를 따로 두지는 않았지만, 그것에 대한 어느 정도의 조정이 필요하다는 것은 분명했다. 그 그룹은 계속 회의를 가졌고 크로커는 더 많은 경험과 권위를 가진 어떤 \"진짜 어른\"이 어딘가에서 나타나서 그룹을 이끌어 줄 거라고 기대했지만 그런 일은 결코 일어나지 않았다. 네트워크 작업 그룹은 ARPA의 암묵적인 승인을 받았고(그들의 회의를 위해서는 많은 장거리 이동이 필요했는데 이 비용은 ARPA 자금으로 지원되었다) 결국 그들이 전담하게 되었다.<sup><a href=\"#user-content-fn-17\" id=\"user-content-fnref-17\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">17</a></sup></p>\n<p>네트워크 작업 그룹은 막대한 도전에 직면했다. 누구도 이전에 컴퓨터 시스템들을 범용적으로 연결하려는 시도를 한 적이 없었다. 이는 1960년대 후반의 컴퓨팅 환경에서 일반적으로 받아들여지던 모든 가정에 반하는 일이었다.</p>\n<blockquote>\n<p>그 당시의 전형적인 메인프레임들은 마치 자기가 세상에서 유일한 컴퓨터인 양 굴었다. 두 개의 서로 다른 컴퓨터 사이에서 몇 비트의 데이터를 왔다갔다 이동시키는 데 필요한 최소한의 통신조차도 명확하거나 쉬운 방식이 없었다. 컴퓨터들을 물리적으로 연결할 수는 있었다. 하지만 일단 연결된 후에는 그들끼리 어떻게 서로 얘기하게 만들 것인가? 그 시기의 컴퓨터는 자기에게 직접 붙어 있는 장치들하고만 상호작용을 했다. 마치 군주가 종들과 얘기하는 식이었다. 메인 컴퓨터에 연결된 모든 주변 장치들은 각각 특정 작업을 담당했는데 언제든 주인님이 내리는 명령을 수행할 준비하 되어 있었다. 컴퓨터는 이런 종류의 상호작용에 맞추어 설계되었다. 컴퓨터는 카드리더기, 단말기, 테이프 단위장치 등에게 명령어를 전송했고 모든 대화의 시작은 컴퓨터에서 시작되었다. 만약 다른 장치가 컴퓨터의 어깨를 툭 건드리면서 \"안녕, 나도 컴퓨터야\"라고 말하는 신호를 보낸다면 그 컴퓨터는 깜짝 놀라 쓰러질 것이다.<sup><a href=\"#user-content-fn-18\" id=\"user-content-fnref-18\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">18</a></sup></p>\n</blockquote>\n<p>그 결과 네트워크 작업 그룹의 초기 진척 속도는 느렸다.<sup><a href=\"#user-content-fn-19\" id=\"user-content-fnref-19\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">19</a></sup> 이 그룹은 첫 번째 회의를 연 지 거의 2년이 지난 1970년 6월이 되어서야 비로소 어떤 프로토콜에 대한 \"공식\" 사양을 확정할 수 있었다.<sup><a href=\"#user-content-fn-20\" id=\"user-content-fnref-20\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">20</a></sup></p>\n<p>하지만 1972년 ICCC에서 ARPANET을 시연하는 시점에는 모든 핵심 프로토콜이 준비되어 있었다. 체스 시나리오와 같은 사례는 이 프로토콜들 중 다수를 사용했다. 사용자가 <code>@echo remote</code>의 단축형인 <code>@e r</code> 명령어를 실행하면 새로운 TELNET 가상 텔레타이프 프로토콜의 기능을 이용해서 TIP가 원격 호스트에게 사용자 입력을 echo 하도록 지시하하는 기능을 했다. 이후 사용자가 <code>@L 134</code>(<code>@login 134</code>의 단축) 명령어를 실행하면 TIP가 134번 호스트와의 초기 연결 프로토콜을 호출하고 이에 따라 원격 호스트가 연결에 필요한 모든 리소스를 할당하고 사용자를 TELNET 세션으로 연결시켰다. (이 프로토콜은 회의 직전에서야 준비되었기 때문에, 앞서 설명한 파일 전송 시나리오는 아마도 파일 전송 프로토콜(File Transfer Protocol)을 사용했을 가능성이 높다.<sup><a href=\"#user-content-fn-21\" id=\"user-content-fnref-21\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">21</a></sup>) 이 모든 프로토콜은 \"레벨 3\" 프로토콜로 알려졌고 그 밑에 레벨 2에는 호스트 간 프로토콜(host-to-host protocol, 호스트 간에 메시지를 주고받을 때 사용하는 기본 형식을 정의)이 있었다. 그리고 레벨 1에는 호스트와 IMP 간의 프로토콜(호스트가 자신이 연결된 라우팅 장비와 통신하는 방법을 정의)이 있었다. 놀랍게도, 이 모든 프로토콜이 문제없이 작동했다.</p>\n<p>내 생각에 네트워크 작업 그룹이 모든 걸 시간에 맞춰 준비하고 더 나아가 이 작업에서 뛰어난 성과를 낼 수 있었던 이유는 표준화를 위해 개방적이고 격식에 얽매이지 않는 접근 방식을 도입했기 때문이다. 이런 방식을 대표하는 게 그 유명한 Request For Comments(RFC) 문서이다. 이 문서들은 원래 네트워크 작업 그룹 멤버들 사이에서 회의 간에 연락을 유지하고 아이디어에 대한 피드백을 요청하기 위한 수단이었으며 재래식 우편으로 공유되었다. 이 \"Request for Comments\"라는 형식은 첫 번째 RFC를 작성했으며 초기에 RFC 메일링 리스트를 감독했던 스티브 크로커가 제안했다. 그룹이 추구하던 개방적이고 협력적인 생태계를 강조하기 위해서였다. 이런 형식과 문서의 가용성 덕분에 프로토콜 설계 과정은 다양한 아이디어와 기존 아이디어의 변형이 융합되는 용광로와 같아졌고, 누구도 체면을 잃지 않으면서 최고의 아이디어가 등장할 수 있는 배경이 되었다. RFC 프로세스는 엄청난 성공을 거뒀고 반세기가 지난 오늘날에도 인터넷 표준을 명시하는 데 사용되고 있다.</p>\n<p>나는 우리가 ARPANET의 영향에 대해 이야기할 때 네트워킹 작업 그룹의 바로 이러한 유산들을 강조해야 한다고 생각한다. 오늘날 인터넷의 가장 마법 같은 점 중 하나는 지구 반대편에 있는 삶들과도 연결될 수 있다는 점이다. 하지만 이는 19세기부터 존재해온 기술이라고 해도 과언이 아니다. 물리적 거리는 ARPANET 이전에 이미 전신(telegraph)으로 정복되었다. ARPANET은 물리적 거리가 아니라 각 호스트 지점에서 사용되던 운영체제, 문자 코드, 프로그래밍 언어, 조직 정책 사이의 논리적 거리를 정복했다. 최초의 패킷 교환 네트워크를 구현한 건 물론 중요한 공학적 업적이었다. 하지만 서로 협력하도록 설계되지 않은 컴퓨터들이 잘 연결될 수 있는 표준을 합의하는 문제는 ARPANET 구축에 관련된 두 가지 큰 문제 중 더 어려운 과제였다. 그리고 이 문제를 해결한 것이야말로 ARPANET 이야기의 가장 놀라운 부분이다.</p>\n<p>1981년 ARPA는 ARPANET의 첫 10년 역사를 되돌아보는 \"완료 보고서(Completion Report)\"를 발간했다. \"성공적이었던 시도의 기술적인 측면과 원래 의도했던 대로 실현되지 못한 시도의 측면\"이라는 장황한 제목의 섹션에서 저자들은 이렇게 썼다.</p>\n<blockquote>\n<p>ARPANET의 개발 과정에서 가장 어려운 작업은 다양한 제조사와, 같은 제조사에서 나왔음에도 다양한 운영체제를 가진 여러 독립적인 호스트 컴퓨터 시스템이 그들의 서로 다른 특성에도 불구하고 서로 통신할 수 있도록 만드는 시도였다. 이 시도는 성공적으로 입증되었다.<sup><a href=\"#user-content-fn-22\" id=\"user-content-fnref-22\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">22</a></sup></p>\n</blockquote>\n<p>이건 미국 연방 정부라는 권위 있는 출처에서 나온 문장이다.</p>\n<p><em>만약 이 글이 재미있었다면, 비슷한 글이 4주마다 올라옵니다! 트위터에서 @TwoBitHistory를 팔로우하거나, RSS 피드를 구독하여 새로운 글이 올라올 때 놓치지 않도록 하세요.</em></p>\n<section data-footnotes=\"\" class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p>\"Hilton Hotel Opens in Capital Today.\" <em>The New York Times</em>, 20 March 1965, <a href=\"https://www.nytimes.com/1965/03/20/archives/hilton-hotel-opens-in-capital-today.html?searchResultPosition=1\">https://www.nytimes.com/1965/03/20/archives/hilton-hotel-opens-in-capital-today.html?searchResultPosition=1</a>. Accessed 7 Feb. 2021 <a href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-2\">\n<p>James Pelkey. <em>Entrepreneurial Capitalism and Innovation: A History of Computer Communications 1968-1988</em>, Chapter 4, Section 12, 2007, <a href=\"http://www.historyofcomputercommunications.info/Book/4/4.12-ICCC%20Demonstration71-72.html\">http://www.historyofcomputercommunications.info/Book/4/4.12-ICCC%20Demonstration71-72.html</a>. Accessed 7 Feb. 2021 <a href=\"#user-content-fnref-2\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-3\">\n<p>Katie Hafner and Matthew Lyon. <em>Where Wizards Stay Up Late: The Origins of the Internet</em>. New York, Simon &#x26; Schuster, 1996, p. 178(번역본: 케이티 해프너, 매튜 라이언 지음, 이재범 옮김, 『아무도 알려주지 않은 인터넷의 기원: 누가 인터넷을 만들었는가』, 지식함지, 2016) <a href=\"#user-content-fnref-3\" data-footnote-backref=\"\" aria-label=\"Back to reference 3\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-4\">\n<p>\"International Conference on Computer Communication.\", <em>Computer</em>, vol. 5, no. 4, 1972, p. c2, <a href=\"https://www.computer.org/csdl/magazine/co/1972/04/01641562/13rRUxNmPIA\">https://www.computer.org/csdl/magazine/co/1972/04/01641562/13rRUxNmPIA</a>. Accessed 7 Feb. 2021 <a href=\"#user-content-fnref-4\" data-footnote-backref=\"\" aria-label=\"Back to reference 4\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-5\">\n<p>\"Program for the International Conference on Computer Communication.\" <em>The Papers of Clay T. Whitehead</em>, Box 42, <a href=\"https://d3so5znv45ku4h.cloudfront.net/Box+042/013_Speech-International+Conference+on+Computer+Communications,+Washington,+DC,+October+24,+1972.pdf\">https://d3so5znv45ku4h.cloudfront.net/Box+042/013_Speech-International+Conference+on+Computer+Communications,+Washington,+DC,+October+24,+1972.pdf</a>. Accessed 7 Feb. 2021 <a href=\"#user-content-fnref-5\" data-footnote-backref=\"\" aria-label=\"Back to reference 5\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-6\">\n<p>사실 ARPANET 시연에 사용된 방이 정확히 어떤 방이었는지 명확하지는 않다. 많은 출처에서 \"볼룸\"에 대해서 언급하는데 워싱턴 힐튼에서는 \"조지타운\"이라는 이름의 방을 회의실로 간주하는 듯 하다. 따라서 시연은 아마 인터내셔널 볼룸에서 이루어졌을 것이다. 하지만 RFC 372에서는 시연 장소로 \"조지타운 볼룸\"이 예약되었다고 암시하고 있다. 워싱턴 힐튼의 층별 평면도는 <a href=\"https://www.pomsmeetings.org/ConfEvents/060/Washington%20Hilton%20Stacked%20Floorplan.pdf\">여기</a>에서 확인할 수 있다. <a href=\"#user-content-fnref-6\" data-footnote-backref=\"\" aria-label=\"Back to reference 6\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-7\">\n<p>Hafner, p. 179. <a href=\"#user-content-fnref-7\" data-footnote-backref=\"\" aria-label=\"Back to reference 7\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-8\">\n<p>ibid., p. 178 <a href=\"#user-content-fnref-8\" data-footnote-backref=\"\" aria-label=\"Back to reference 8\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-9\">\n<p>Bob Metcalfe. \"Scenarios for Using the ARPANET.\" <em>Collections-Computer History Museum</em>, <a href=\"https://www.computerhistory.org/collections/catalog/102784024\">https://www.computerhistory.org/collections/catalog/102784024</a>. Accessed 7 Feb. 2021. <a href=\"#user-content-fnref-9\" data-footnote-backref=\"\" aria-label=\"Back to reference 9\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-10\">\n<p>Hafner, p. 176 <a href=\"#user-content-fnref-10\" data-footnote-backref=\"\" aria-label=\"Back to reference 10\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-11\">\n<p>Robert H. Thomas. “Planning for ACCAT Remote Site Operations.” BBN Report No. 3677, October 1977, <a href=\"https://apps.dtic.mil/sti/pdfs/ADA046366.pdf\">https://apps.dtic.mil/sti/pdfs/ADA046366.pdf</a>. Accessed 7 Feb. 2021 <a href=\"#user-content-fnref-11\" data-footnote-backref=\"\" aria-label=\"Back to reference 11\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-12\">\n<p>Hafner, p. 12 <a href=\"#user-content-fnref-12\" data-footnote-backref=\"\" aria-label=\"Back to reference 12\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-13\">\n<p>Joy Lisi Rankin. A People’s History of Computing in the United States. Cambridge, MA, Harvard University Press, 2018, p. 84. <a href=\"#user-content-fnref-13\" data-footnote-backref=\"\" aria-label=\"Back to reference 13\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-14\">\n<p>Rankin, p. 93 <a href=\"#user-content-fnref-14\" data-footnote-backref=\"\" aria-label=\"Back to reference 14\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-15\">\n<p>Steve Crocker. Personal interview. 17 Dec. 2020. <a href=\"#user-content-fnref-15\" data-footnote-backref=\"\" aria-label=\"Back to reference 15\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-16\">\n<p>크로커가 내게 이 회의의 회의록을 보내주었다. 회의록에는 회의에 참석한 모두의 목록이 있었다. <a href=\"#user-content-fnref-16\" data-footnote-backref=\"\" aria-label=\"Back to reference 16\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-17\">\n<p>스티브 크로커의 인터뷰 <a href=\"#user-content-fnref-17\" data-footnote-backref=\"\" aria-label=\"Back to reference 17\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-18\">\n<p>Hafner, p. 146, 번역본의 194p에서 재인용 <a href=\"#user-content-fnref-18\" data-footnote-backref=\"\" aria-label=\"Back to reference 18\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-19\">\n<p>\"Completion Report / A History of the ARPANET: The First Decade.\" BBN Report No. 4799, April 1981, <a href=\"https://walden-family.com/bbn/arpanet-completion-report.pdf\">https://walden-family.com/bbn/arpanet-completion-report.pdf</a>, p. II-13 <a href=\"#user-content-fnref-19\" data-footnote-backref=\"\" aria-label=\"Back to reference 19\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-20\">\n<p>RFC 54, \"Official Protocol Proffering\"의 이야기이다. <a href=\"#user-content-fnref-20\" data-footnote-backref=\"\" aria-label=\"Back to reference 20\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-21\">\n<p>Hafner, p. 175 <a href=\"#user-content-fnref-21\" data-footnote-backref=\"\" aria-label=\"Back to reference 21\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-22\">\n<p>\"Completion Report / A History of the ARPANET: The First Decade\", p. II-29. <a href=\"#user-content-fnref-22\" data-footnote-backref=\"\" aria-label=\"Back to reference 22\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n</ol>\n</section>",
    "headingTree": [
      {
        "title": "The Real Novelty of the ARPANET",
        "url": "#the-real-novelty-of-the-arpanet",
        "items": []
      },
      {
        "title": "ARPANET의 등장",
        "url": "#arpanet의-등장",
        "items": []
      },
      {
        "title": "바로 지금, 모두 모여서",
        "url": "#바로-지금-모두-모여서",
        "items": []
      }
    ],
    "url": "/translations/the-real-novelty-of-the-arpanet",
    "thumbnail": {
      "local": "http://localhost:3000/api/og?title=ARPANET의 진정한 위대함"
    }
  },
  {
    "slug": "translations/the-rise-and-rise-of-json",
    "title": "JSON의 등장과 성장",
    "date": "2024-12-20T00:00:00Z",
    "description": "Two-Bit History의 The Rise and Rise of JSON 번역",
    "html": "<p>이 글은 Two-Bit History의 \"The Rise and Rise of JSON\"을 원작자의 허락 하에 번역한 것입니다. 원문은 <a href=\"https://twobithistory.org/2017/09/21/the-rise-and-rise-of-json.html\">여기</a>에서 읽을 수 있습니다.</p>\n<h1 id=\"the-rise-and-rise-of-json\">The Rise and Rise of JSON</h1>\n<p>JSON은 세계를 장악했다. 오늘날 인터넷을 통해 통신하는 애플리케이션들은 대부분 JSON을 사용한다. 가장 널리 쓰이고 있는 API(주로 구글, 페이스북, 트위터 같은 주요 기업들이 제공하는 API로 구성되어 있다) 10개 중 1개만이 JSON이 아닌 XML로 데이터를 제공한다.<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1</a></sup> 트위터는 2013년 API의 새 버전을 발표하면서 XML을 폐기하고 JSON만을 사용하도록 전환했다. 프로그래머들을 위한 질의응답 사이트인 Stack Overflow에 따르면 JSON에 관한 질문이 다른 어떤 데이터 교환 형식에 대한 질문보다도 많다.<sup><a href=\"#user-content-fn-2\" id=\"user-content-fnref-2\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup></p>\n<p><img src=\"/static/json-chart-7cfeaac6.png\" alt=\"json의 사용량이 엄청나게 상승하고 있는 그래프\"></p>\n<p>XML도 여전히 많은 곳에서 사용되고 있다. 웹에서는 SVG, RSS와 Atom 피드에 XML이 사용된다. 안드로이드 개발자들은 앱이 사용자 승인이 필요한 권한을 요구함을 선언할 때 XML로 작성된 앱 매니페스트를 사용한다. JSON 대신 사용할 수 있는 게 XML만 있는 건 아니다. 일부 개발자들은 YAML이나 구글의 Protocol Buffers 같은 기술을 사용하기도 한다. 그러나 이들은 JSON만큼 대중적이지 않다. 현재로서는 JSON이 인터넷 상에서 프로그램 간 통신을 위한 표준 포맷으로 자리 잡은 상황이다.</p>\n<p>불과 2005년만 해도 웹 생태계는 \"비동기 JavaScript와 XML(Ajax)\"의 가능성에 열광하고 있었다. \"비동기 JavaScript와 JSON\"이 <em>아니었다.</em> 이런 것을 고려할 때 JSON의 지배적인 위치는 놀랍다. 물론 이러한 차이가 두 포맷의 상대적인 인기 때문이 아니라 \"AJAX\"라는 약어가 \"AJAJ\"보다는 더 매력적으로 보였다는 단순한 이유 때문일 수도 있다. 하지만 2005년에도 몇몇 사람들이 XML 대신 JSON을 사용하기 시작했더라도 당시에는 그 수가 아직 많지 않았다. 왜 XML이 그렇게 가파르게 추락했고 불과 10여년 후에 \"비동기 JavaScript와 XML\"이라는 용어가 시대착오적이 되었는지 궁금해진다. 이 10년 동안 무슨 일이 있었을까? 어떻게 해서 JSON이 그렇게 많은 애플리케이션에서 XML을 대체하게 된 걸까? 그리고 전 세계의 엔지니어와 시스템이 사용하는 이 데이터 형식은 도대체 누가 만든 것일까?</p>\n<h1 id=\"json의-탄생\">JSON의 탄생</h1>\n<p>2001년 4월 최초의 JSON 메시지가 전송되었다. 이건 컴퓨팅의 역사에서 중요한 순간이었다. 이 메시지는 베이 에어리어(Bay-Area)의 한 차고에서 전송되었다. State Software라는 기술 컨설팅 회사의 공동 창립자인 더글라스 크락포드(Douglas Crockford)와 칩 모닝스타(Chip Morningstar)는 모닝스타의 차고에서 모여 그들의 아이디어를 테스트했다.</p>\n<p>크락포드와 모닝스타는 \"AJAX\"라는 용어가 탄생하기도 훨씬 전부터 AJAX 애플리케이션을 구축하려고 시도하고 있었다. 그들이 시도하고 있던 기술에 필요한 브라우저 지원은 좋지 않았다. 그들은 초기 페이지 로드 이후에도 애플리케이션에 데이터를 전달하고 싶었지만, 이런 동작을 그들이 지원하고자 했던 모든 브라우저에서 다 작동하도록 구현할 수 있는 방법을 찾지 못했다.</p>\n<p>오늘날에는 믿기 어려울 수 있지만 2001년 당시에는 인터넷 익스플로러가 웹 브라우저의 최첨단 기술을 대표했다. 이미 1999년부터 인터넷 익스플로러 5는 XMLHttpRequest의 원시적인 형태를 지원했으며 프로그래머들은 이를 ActiveX라는 프레임워크를 통해 사용할 수 있었다. 크락포드와 모닝스타는 이 기술을 사용해 애플리케이션의 데이터를 초기 페이지 로드 이후에도 가져올 수 있었다. 하지만 그들이 지원하고자 했던 또다른 브라우저인 넷스케이프 4에서는 같은 방법을 사용할 수 없었다. 그래서 그들은 두 브라우저에서 모두 작동하는 별도의 시스템을 사용해야 했다.</p>\n<p>최초의 JSON 메시지는 다음과 같은 모습이었다.</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"--shiki-light:#24292e;--shiki-pink:#000000;--shiki-dark:#e1e4e8;--shiki-darkPink:#D4D4D4;--shiki-light-bg:#fff;--shiki-pink-bg:#FFFFFF;--shiki-dark-bg:#24292e;--shiki-darkPink-bg:#1E1E1E\" tabindex=\"0\" data-language=\"html\" data-theme=\"github-light light-plus github-dark dark-pink\"><code data-language=\"html\" data-theme=\"github-light light-plus github-dark dark-pink\" style=\"display: grid;\"><span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">&#x3C;</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">html</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">>&#x3C;</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">head</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">>&#x3C;</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">script</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">></span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">    document</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">domain</span><span style=\"--shiki-light:#D73A49;--shiki-pink:#000000;--shiki-dark:#F97583;--shiki-darkPink:#D4D4D4\"> =</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> 'fudco'</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">;</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">    parent</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">session</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-pink:#795E26;--shiki-dark:#B392F0;--shiki-darkPink:#4DABF7\">receive</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">(</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">        { </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">to:</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> \"session\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">, </span><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">do:</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> \"test\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">,</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#001080;--shiki-dark:#E1E4E8;--shiki-darkPink:#FFAB70\">          text:</span><span style=\"--shiki-light:#032F62;--shiki-pink:#A31515;--shiki-dark:#9ECBFF;--shiki-darkPink:#E99A9A\"> \"Hello world\"</span><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\"> }</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#000000FF;--shiki-dark:#E1E4E8;--shiki-darkPink:#D4D4D4\">    )</span></span>\n<span data-line=\"\"><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">&#x3C;/</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">script</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">>&#x3C;/</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">head</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">>&#x3C;/</span><span style=\"--shiki-light:#22863A;--shiki-pink:#800000;--shiki-dark:#85E89D;--shiki-darkPink:#F695C6\">html</span><span style=\"--shiki-light:#24292E;--shiki-pink:#800000;--shiki-dark:#E1E4E8;--shiki-darkPink:#808080\">></span></span></code></pre></figure>\n<p>이 메시지에서 우리가 알고 있는 JSON과 유사한 부분은 일부에 불과하다. 사실 메시지 자체는 HTML 문서에 일부 JavaScript 코드가 포함된 형태였다. JSON과 닮은 부분은 <code>receive()</code> 함수에 전달되는 JavaScript 객체 리터럴뿐이었다.</p>\n<p>크락포드와 모닝스타는 HTML 프레임을 이용한 트릭으로 데이터를 전송할 수 있다는 아이디어를 떠올렸다. 그들은 프레임이 위와 같은 HTML 문서를 반환하는 페이지의 URL을 가리키도록 지정했다. 이 HTML 문서를 수신하면 JavaScript 코드가 실행되고 따라서 객체 리터럴을 애플리케이션에 다시 전달할 수 있었다. 이 방식은 하위 창이 상위 창에 접근하는 것을 제한하는 브라우저의 보안 정책을 우회할 수 있는 방법이었다. 크락포드와 모닝스타는 문서의 도메인을 명시적으로 설정하여 이를 구현했다. (프레임 기반의 이 테크닉은 hidden frame 기법이라고도 불리는데 XMLHttpRequest가 널리 구현되기 전인 1990년대 후반에 자주 사용되었다.<sup><a href=\"#user-content-fn-3\" id=\"user-content-fnref-3\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">3</a></sup>)</p>\n<p>최초의 JSON 메시지에서 놀라운 점은 이게 새로운 데이터 형식의 첫 사용 사례라는 것이 명백히 드러나지 않는다는 것이다. 이건 그냥 JavaScript 코드일 뿐이었다! 사실 JavaScript를 이런 방식으로 사용하는 건 너무나 직관적이었고, 크락포드 자신도 이 방법을 사용한 게 자신이 최초가 아니라고 말했던 바 있다. 크락포드는 1996년에 이미 넷스케이프의 누군가가 정보의 교환을 위해 JavaScript 배열 리터럴을 사용하고 있었다고 말했다. 이 메시지는 그저 JavaScript였기 때문에 이를 해석하기 위해 어떤 추가적인 파싱 과정도 필요하지 않다. JavaScript 인터프리터가 모든 작업을 처리할 수 있다.</p>\n<p>사실 최초의 JSON 메시지는 JavaScript 인터프리터에서 오류를 일으켰다. JavaScript는 예약어를 매우 많이 가지고 있었고(ECMAScript 6 기준으로는 64개의 예약어가 있다) 크락포드와 모닝스타는 자신들도 모르게 메시지에 이 예약어 중 하나를 사용해 버렸다. 그들은 <code>do</code>를 객체의 키로 사용했는데 <code>do</code>는 JavaScript의 예약어였다. JavaScript의 예약어가 너무 많았기 때문에 크락포드는 이 모든 예약어들을 사용하는 걸 피하기보다는 모든 JSON 키를 따옴표로 감싸는 규칙을 강제하기로 결정했다. JavaScript 인터프리터는 객체의 키를 따옴표로 감쌀 경우 이를 단순한 문자열로 인식하게 된다. 이렇게 하면 예약어를 키로 사용하는 것도 가능하다. 이것이 오늘날 JSON의 키를 반드시 따옴표로 감싸야 하는 이유이다.</p>\n<p>크락포드와 모닝스타는 자신들이 개발한 포맷이 모든 종류의 애플리케이션에 사용할 수 있는 범용 포맷이라는 것을 깨달았다. 그들은 이 포맷에 JavaScript Markup Language이라는 뜻인 JSML이라는 이름을 붙이라고 했으나 이미 Java Speech Markup Language이라는 기술이 같은 약어(JSML)를 사용하고 있었다. 그들은 결국 JavaScript Object Notation, 즉 JSON이라는 이름으로 변경했다. 그들은 클라이언트들에게 이 포맷을 제안했지만 당시의 클라이언트들은 공식적인 사양이 없는 새로운 기술을 사용하는 데 주저했다. 이를 해결하기 위해 크락포드는 직접 사양을 작성하기로 결심했다.</p>\n<p>2002년 크락포드는 JSON.org라는 도메인을 구매하고 JSON의 문법과 파서의 예시 구현을 올렸다. 이 웹사이트는 여전히 운영 중이고 이제는 2013년에 승인된 JSON의 ECMA 표준에 대한 링크도 눈에 잘 띄게 추가되어 있다. 크락포드는 이 웹사이트의 공개 이후 JSON을 적극적으로 홍보하지는 않았다. 그런데 곧 많은 사람들이 다양한 프로그래밍 언어로 구현한 JSON 파서를 제출하기 시작했다. JSON의 기원이 JavaScript와 연결되어 있다는 것은 분명했지만 이 포맷이 어떤 프로그래밍 언어 사이에서도 데이터를 교환하는 데 적절하다는 게 명백해졌다.</p>\n<h1 id=\"doing-ajax-wrong\">Doing AJAX Wrong</h1>\n<p>2005년 JSON은 폭발적인 인기를 누렸다. 그 해 웹 디자이너이자 개발자인 제시 제임스 가렛(Jesse James Garrett)은 그의 블로그 게시글에서 \"AJAX\"라는 용어를 만들어냈다. 가렛은 AJAX가 단일한 새로운 기술이 아니라 \"각각 독립적으로 발전해 온 여러 기술들이 강력하고 새로운 방식으로 결합된 개념\"<sup><a href=\"#user-content-fn-5\" id=\"user-content-fnref-5\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">4</a></sup>이라고 조심스럽게 강조했다. 가렛은 웹 애플리케이션 개발에서 인기를 얻고 있던 새로운 접근 방식을 관찰하고 AJAX라는 이름을 붙인 것이다. 그의 블로그 게시글에서는 이어서 JavaScript와 XMLHttpRequest를 활용하여 기존 웹 페이지보다 더 반응성이 높고 상태를 유지할 수 있는 새로운 형태의 애플리케이션을 구축하는 방법이 설명되었다. 개럿은 이미 AJAX 기법을 사용하고 있었던 웹사이트의 예시로 Gmail과 Flickr를 언급했다.</p>\n<p>\"AJAX\"에서 \"X\"는 XML을 의미한다. 하지만 가렛은 후속 Q&#x26;A 게시글에서 JSON을 XML의 완전한 대체재로 사용할 수 있다고 언급했다. 그는 이렇게 썼다.</p>\n<blockquote>\n<p>\"XML은 AJAX 클라이언트에서 데이터를 주고받는 가장 발전된 수단이다. 하지만 JavaScript Object Notation 같은 기술이나 그와 유사한 데이터 구조화 방식을 사용해도 같은 효과를 얻을 수 있다.\"<sup><a href=\"#user-content-fn-6\" id=\"user-content-fnref-6\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">5</a></sup></p>\n</blockquote>\n<p>개발자들은 AJAX 애플리케이션을 구축할 때 JSON을 사용하는 게 쉽다는 것을 알게 되었고 많은 개발자들이 XML보다 JSON을 선호하게 되었다. 그래서 아이러니하게도 AJAX에 대한 관심이 JSON의 인기를 폭발적으로 증가시켰다. JSON이 블로그 생태계에서 주목받기 시작한 것도 이 무렵이다.</p>\n<p>2006년 다작하는 블로거이자 RSS와 XML-RPC와 같은 XML 기반 기술의 창시자인 데이브 위너(Dave Winer)는 JSON이 아무런 타당한 이유도 없이 XML을 재발명하고 있다고 비판했다. 데이터 교환 포맷 간의 경쟁이 살해 위협까지 불러일으킬 것이라고는 상상하기 어렵지만, 위너는 이렇게 썼다.</p>\n<blockquote>\n<p>물론 [JSON]을 파싱하는 코드를 저도 작성할 수 있습니다. 하지만 대체 XML이 뭐가 부족했길래 XML을 이렇게 다시 만들어야 했을까요?(그 이유를 한번 듣고 싶네요) 대체 누가 이런 어처구니없는 모조품을 만들었을까요? 지금 당장 나무에 그들을 매달아야겠습니다.</p>\n</blockquote>\n<p>위너의 좌절감은 쉽게 이해할 수 있다. XML은 널리 사랑받는 기술이 아니었다. 심지어 위너 본인조차도 XML을 사랑하지 않는다고 말한 바 있다.<sup><a href=\"#user-content-fn-8\" id=\"user-content-fnref-8\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">6</a></sup> 하지만 XML은 누구나, 상상 가능한 거의 모든 목적으로 사용할 수 있는 시스템으로 설계되었다. 그런 의도를 가진 XML은 특정 애플리케이션에 맞는 도메인 특화 언어를 정의할 수 있도록 하는 메타 언어였다. 웹 피드 기술인 RSS와 Simple Object Access Protocol(SOAP)가 그 예시이다. 위너는 공통의 데이터 교환 형식을 사용하는 것이 가져올 수 있는 다양한 이점을 고려할 때, 모두가 합의할 수 있는 표준을 마련하는 것이 중요하다고 생각했다. 그는 XML이 모든 사람의 요구를 충족시킬 수 있도록 유연성을 갖춰야 한다고 생각했다. 그런데 JSON이 등장했다. 위너가 보기에 JSON은 XML을 유연하게 만들어 주었던 복잡한 요소들을 버린 데에 비해 특별한 이점을 제공하지는 않았다.</p>\n<p>크락포드는 위너의 블로그 게시글을 보고 댓글을 남겼다. JSON이 XML을 재발명한 것이라는 비판에 대해 크록포드는 이렇게 응수했다. \"바퀴를 다시 발명하는 것의 좋은 점은, 이번엔 둥근 바퀴를 발명할 수 있다는 거죠.\"</p>\n<h1 id=\"json-vs-xml\">JSON vs XML</h1>\n<p>2014년 JSON은 ECMA 표준과 RFC 문서를 통해 공식적인 명세로 자리잡았다. JSON은 고유한 MIME 타입도 갖추게 되었다. JSON은 이제 명실상부한 '빅 리그'에 진입한 것이었다.</p>\n<p>왜 JSON이 XML보다 훨씬 더 큰 인기를 얻었을까?</p>\n<p>크락포드는 JSON.org에 JSON이 XML보다 더 우수한 이유를 요약해 놓았다. 그는 JSON의 구문이 간결하고 구조가 예측 가능하기 때문에, 사람과 기계 모두가 더 쉽게 이해할 수 있다고 설명했다.<sup><a href=\"#user-content-fn-10\" id=\"user-content-fnref-10\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">7</a></sup> 다른 블로거들은 XML의 장황함과 \"꺾쇠괄호 세금(the angle bracket tax)\"에 주목했다.<sup><a href=\"#user-content-fn-11\" id=\"user-content-fnref-11\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">8</a></sup> XML의 각 여는 태그(opening tag)들은 반드시 닫는 태그(closing tag)와 짝을 이루어야 한다. 이로 인해 XML 문서는 많은 중복 정보를 포함하게 된다. 따라서 압축되지 않은 경우 XML 문서는 동일한 데이터를 담고 있는 JSON 문서보다 훨씬 더 큰 크기를 가진다. 게다가 이러한 중복 정보는 XML 문서를 읽기 어렵게 만든다.</p>\n<p>크락포드는 JSON의 또 다른 큰 장점으로, JSON이 데이터 교환 형식으로 설계되었다는 점을 들었다.<sup><a href=\"#user-content-fn-12\" id=\"user-content-fnref-12\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">9</a></sup> JSON은 처음부터 프로그램 간에 구조화된 정보를 전달하는 것을 목표로 탄생했다. 반면 XML은 똑같이 구조화된 정보 전달을 위해 사용되기는 했지만 원래는 문서 마크업 언어로 설계되었다. XML은 SGML(Standard Generalized Markup Language)에서 발전한 것이며 또 SGML은 LaTeX와 유사한 문서 처리 시스템으로 설계되었던 Scribe라는 마크업 언어에서 진화한 것이다. XML에서도 태그는 \"혼합 콘텐츠\"를 포함할 수 있었는데 이 혼합 콘텐츠란 단어 또는 한 구절을 감싸는 인라인 태그가 들어 있는 텍스트였다. 이런 방식은 편집자가 원고에 빨간 펜이나 파란 펜으로 수정 사항을 표시하는 과정과 비슷하다. 이건 마크업 언어에 대한 중요한 비유라고 할 수 있다. 반면 JSON은 혼합 콘텐츠를 지원하지 않았지만 그 대신 훨씬 더 단순한 구조를 갖게 되었다. 트리 구조를 통해서 문서를 훌륭하게 모델링할 수 있지만 바로 그 문서 개념을 포기함으로써 크락포드는 JSON을 딕셔너리와 배열만으로 제한할 수 있었다. 딕셔너리와 배열은 모든 프로그래머가 프로그램을 만들 때 사용하는 기본적이고 익숙한 데이터 구조이다.</p>\n<p>마지막으로, 사람들이 XML을 싫어한 이유는 XML이 혼란스러웠기 때문이라고 개인적으로 생각한다. XML이 혼란스러웠던 이유는 너무 다양한 변형이 존재했기 때문으로 보인다. 처음 XML을 접하는 사람이 XML 그 자체와 RSS, ATOM, SOAP, SVG와 같은 서브 언어들을 명확히 구분하는 건 쉽지 않다. 일반적인 XML 문서의 첫 줄에는 XML 버전이 명시되고 해당 XML 문서가 준수해야 할 특정 서브 언어가 이어진다. 여기서부터 이미 복잡성이 시작된다. 반면 JSON은 새로운 JSON 명세가 작성될 필요가 없을 정도로 직관적이다. XML의 설계자들은 모든 필요를 만족시킬 수 있는 하나의 데이터 교환 형식을 만들고자 했다. 하지만 그 과정에서 그들은 오버엔지니어링이라는 유명한 함정에 빠지고 말았다. XML은 너무 범용적이었기에 간단한 작업에 쓰기 힘들었다.</p>\n<p>2000년 HTML을 XML 표준에 맞추려는 캠페인이 시작되었다. XML 표준을 준수하는 HTML 명세가 발표되었고 이는 이후 XHTML로 불리게 되었다. 일부 브라우저 벤더들은 즉시 이 새로운 표준을 지원하기 시작했으나, 곧 명확해진 사실이 하나 있었다. 대다수의 HTML 사용자들은 기존 방식을 바꾸려 하지 않았다. XHTML 표준은 기존의 HTML보다 더 엄격한 유효성 검사를 요구했다. 하지만 HTML의 느슨한 규칙에 의존하는 웹사이트가 너무 많았다. 결국 XHTML의 두 번째 버전을 작성하려는 시도는 2009년 중단되었고 HTML의 미래는 HTML5로 확정되었다. HTML5는 XML 호환성을 강요하지 않는 표준이었다.</p>\n<p>XHTML이 성공했다면 XML은 그 설계자들이 꿈꾸던 대로 범용 데이터 포맷이 되었을지도 모른다. HTML 문서와 API 응답이 정확히 같은 구조를 갖는 걸 상상해보라. 그런 세상에서는 JSON이 지금처럼 만능 데이터 교환 형식으로 자리잡지 못했을지도 모른다. 하지만 나는 XHTML의 실패를 XML 진영의 일종의 사상적 패배로 해석한다. XML이 HTML에 가장 적합한 도구가 아니었다면 다른 애플리케이션에 대해서도 XML보다 더 나은 도구가 있었을 것이다. 우리가 살고 있는 세계에서는 JSON과 같이 단순하고 명확한 목적을 갖고 설계된 포맷이 성공을 거두는 게 어쩌면 당연한 일이다.</p>\n<p><em>만약 이 글이 재미있었다면, 비슷한 글이 4주마다 올라옵니다! 트위터에서 @TwoBitHistory를 팔로우하거나, RSS 피드를 구독하여 새로운 글이 올라올 때 놓치지 않도록 하세요.</em></p>\n<section data-footnotes=\"\" class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p><a href=\"http://www.cs.tufts.edu/comp/150IDS/final_papers/tstras01.1/FinalReport/FinalReport.html#software\">http://www.cs.tufts.edu/comp/150IDS/final_papers/tstras01.1/FinalReport/FinalReport.html#software</a> (링크 깨짐) <a href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-2\">\n<p><a href=\"https://trends.stackoverflow.co/?tags=json,xml,protocol-buffers,yaml,csv\">https://trends.stackoverflow.co/?tags=json,xml,protocol-buffers,yaml,csv</a> <a href=\"#user-content-fnref-2\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-3\">\n<p>Zakas, Nicholas C., et al. \"What Is Ajax?\" Professional Ajax, 2nd ed., Wiley, 2007 <a href=\"#user-content-fnref-3\" data-footnote-backref=\"\" aria-label=\"Back to reference 3\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-5\">\n<p>(원문의 링크가 깨져서 아카이브로 대체) <a href=\"https://designftw.mit.edu/lectures/apis/ajax_adaptive_path.pdf\">Ajax: A New Approach to Web Applications</a> <a href=\"#user-content-fnref-5\" data-footnote-backref=\"\" aria-label=\"Back to reference 4\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-6\">\n<p>ibid. <a href=\"#user-content-fnref-6\" data-footnote-backref=\"\" aria-label=\"Back to reference 5\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-8\">\n<p><a href=\"https://blogoscoped.com/archive/2009-03-05-n15.html\">https://blogoscoped.com/archive/2009-03-05-n15.html</a> <a href=\"#user-content-fnref-8\" data-footnote-backref=\"\" aria-label=\"Back to reference 6\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-10\">\n<p><a href=\"https://www.json.org/xml.html\">https://www.json.org/xml.html</a> <a href=\"#user-content-fnref-10\" data-footnote-backref=\"\" aria-label=\"Back to reference 7\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-11\">\n<p><a href=\"https://blog.codinghorror.com/xml-the-angle-bracket-tax/\">https://blog.codinghorror.com/xml-the-angle-bracket-tax/</a> <a href=\"#user-content-fnref-11\" data-footnote-backref=\"\" aria-label=\"Back to reference 8\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-12\">\n<p><a href=\"https://www.youtube.com/watch?v=-C-JoyNuQJs&#x26;t=2030s\">https://www.youtube.com/watch?v=-C-JoyNuQJs&#x26;t=2030s</a> <a href=\"#user-content-fnref-12\" data-footnote-backref=\"\" aria-label=\"Back to reference 9\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n</ol>\n</section>",
    "headingTree": [
      {
        "title": "The Rise and Rise of JSON",
        "url": "#the-rise-and-rise-of-json",
        "items": []
      },
      {
        "title": "JSON의 탄생",
        "url": "#json의-탄생",
        "items": []
      },
      {
        "title": "Doing AJAX Wrong",
        "url": "#doing-ajax-wrong",
        "items": []
      },
      {
        "title": "JSON vs XML",
        "url": "#json-vs-xml",
        "items": []
      }
    ],
    "url": "/translations/the-rise-and-rise-of-json",
    "thumbnail": {
      "local": "/static/json-chart-7cfeaac6.png"
    }
  },
  {
    "slug": "translations/what-did-ada-lovelace-program-actually-do",
    "title": "에이다 러브레이스의 프로그램은 실제로 어떻게 동작했을까?",
    "date": "2024-12-19T00:00:00Z",
    "description": "Two-Bit History의 What Did Ada Lovelace's Program Actually Do? 글의 번역",
    "html": "<p>이 글은 Two-Bit History의 What Did Ada Lovelace's Program Actually Do? 글을 원작자의 허락 하에 번역한 것입니다. 원문은 <a href=\"https://twobithistory.org/2018/08/18/ada-lovelace-note-g.html\">여기</a>에서 읽을 수 있습니다.</p>\n<hr>\n<p>마이크로소프트의 창업 이야기는 컴퓨팅의 역사에서 가장 유명한 에피소드 중 하나다. 1975년 폴 앨런은 앨버커키로 날아갔다. 그와 빌 게이츠가 함께 개발한, 알테어(Altair) 마이크로컴퓨터에서 동작하는 BASIC 인터프리터를 시연하기 위해서였다. 앨런과 게이츠는 알테어를 보유하고 있지 않았기 때문에, 하버드의 컴퓨터 시스템에서 작동하는 에뮬레이터를 개발해 인터프리터를 테스트했다. 이 에뮬레이터는 인텔 8080 프로세서의 공개된 사양만을 기반으로 만들어졌다. 앨런이 실제 알테어 컴퓨터에서는 처음으로 그들의 인터프리터를 실행했을 때 그것이 제대로 작동할지 전혀 확신하지 못했다. 그와 게이츠가 개발한 프로그램을 구매해주길 바랐던 사람들 앞에서의 시연이었다. 그 인터프리터는 잘 작동했다. 바로 다음 달, 앨런과 게이츠는 그들의 회사를 공식적으로 설립했다.</p>\n<p>폴 앨런과 빌 게이츠가 BASIC 인터프리터를 개발하기 100년도 더 전에, 에이다 러브레이스는 컴퓨터 프로그램을 작성하고 이를 출판했다. 그녀 역시 실제 컴퓨터가 없이 설명만 들은 상태에서 프로그램을 작성했다. 하지만 그녀의 프로그램은 마이크로소프트의 BASIC 인터프리터와는 다르게, 실행되지 못했다. 그녀가 프로그램을 실행할 대상으로 삼았던 컴퓨터는 결국 제작되지 않았기 때문이다.</p>\n<p>러브레이스가 작성한 프로그램은 흔히 세계 최초의 컴퓨터 프로그램으로 불린다. 하지만 모든 이들이 이 명칭에 동의하는 것은 아니다. 사실 러브레이스의 유산은 컴퓨팅의 역사에서 가장 논쟁이 치열한 주제 중 하나다. 월터 아이작슨은 그녀의 공헌의 범위와 가치를 둘러싼 논쟁이 \"소규모 학문 분야의 특화된 연구\"에 해당한다고 언급한 바 있다<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1</a></sup>. 이러한 논쟁은 러브레이스가 여성이라는 사실로 인해 더욱 민감한 문제로 다루어져 왔다. 역사학자들은 러브레이스가 정당한 평가를 받았는지 혹은 과대평가되었는지를 주장하기 위해 다양한 1차 사료들을 인용해 왔다. 하지만, 정작 그녀의 출판물에 담긴 기술적 세부 사항을 설명하는 데에는 상대적으로 적은 시간을 할애하는 듯 하다. 그 기술적인 세부 사항이 가장 흥미로운 부분이기 때문에 이러한 경향은 아쉬운 일이다. 1843년에 작성된 프로그램이 어떻게 쓰였는지 누구나 알고 싶지 않겠는가?</p>\n<p>객관적으로 봤을 때, 러브레이스의 프로그램을 어떤 단순화도 없이 비전문가에게 설명하는 건 쉽지 않다. 하지만 그 복잡함이 바로 그녀의 프로그램을 더 놀랍게 만든다. 러브레이스가 \"최초의 프로그래머\"로 불릴 수 있는지와 상관없이, 러브레이스의 프로그램이 지닌 엄밀함은 이전의 어떤 작업보다도 훨씬 뛰어났다. 러브레이스는 연산을 반복할 수 있는 그룹으로 만들어서 체계적으로 구성하는 방법을 고심했고, 반복문(loop) 개념을 고안했다. 그녀는 변수가 변화하는 상태를 추적하는 것이 얼마나 중요한지를 인식하고, 이러한 변화를 시각적으로 나타낼 수 있는 표기법을 도입했다. 프로그래머인 나로서는 러브레이스가 했던 작업이 오늘날 소프트웨어를 작성하는 경험과 얼마나 닮아 있는지를 보고 깜짝 놀랐다.</p>\n<p>이제 러브레이스의 프로그램을 좀 더 자세히 살펴보자. 그녀는 이 프로그램을 베르누이 수(Bernoulli numbers)를 계산하기 위해 설계했다. 베르누이 수가 무엇인지 이해하려면, 수천 년 전으로 거슬러 올라가야 한다. 이는 수학의 가장 오래된 문제 중 하나와 맞닿아 있기 때문이다.</p>\n<h1 id=\"제곱수들의-합\">제곱수들의 합</h1>\n<p>피타고라스 학파는 지중해 연안에 살면서 숫자를 숭배했다. 그들의 취미 중 하나는 조약돌을 사용해 삼각형을 만드는 것이었다.</p>\n<p><img src=\"/static/triangular_numbers1-9fbf1cc6.png\" alt=\"삼각형 수\"></p>\n<p>조약돌 하나에 두 개의 조약돌로 이루어진 줄을 추가하면, 총 세 개의 조약돌로 이루어진 삼각형이 된다. 여기에 조약돌 세 개로 이루어진 줄을 추가하면, 총 여섯 개의 조약돌로 이루어진 삼각형이 만들어진다. 이런 방식으로 이전 줄보다 하나 많은 조약돌로 이루어진 줄을 추가해 가면서 계속할 수 있다. 여섯 줄로 이루어진 삼각형에는 총 21개의 조약돌이 들어간다. 그렇다면, 423줄로 이루어진 삼각형에는 몇 개의 조약돌이 필요할까?</p>\n<p>피타고라스 학파가 찾고자 했던 것은, 모든 숫자를 하나하나 더하지 않고도 아래의 합계를 계산할 수 있는 방법이었다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 + 2 + 3 + \\ldots + n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></p>\n<p>결국 그들은 같은 크기의 삼각형 두 개를 서로 맞붙여 직사각형을 만들고 직사각형의 면적을 구한 후 이를 2로 나누는 방식으로 삼각형에 들어가는 조약돌의 개수를 구할 수 있다는 사실을 깨달았다.</p>\n<p><img src=\"/static/triangular_numbers2-31c56c6a.png\" alt=\"삼각형 수2\"></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>n</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">1 + 2 + 3 + \\ldots + n = \\frac{n(n+1)}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>아르키메데스는 이후 비슷한 문제를 탐구했다. 그는 다음과 같은 급수(series)를 계산하고자 했다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">1^2 + 2^2 + 3^2 + \\ldots + n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>이 급수를 시각화하려면 점점 더 큰 정사각형(작은 정육면체로 이루어진)들이 차곡차곡 쌓여 피라미드 모양을 이루는 모습을 떠올리면 된다. 아르키메데스는 이런 피라미드를 만들기 위해 필요한 정육면체의 개수를 간단히 계산할 수 있는 방법이 있는지 궁금해했다. 예를 들어 423층으로 된 피라미드에 필요한 정육면체의 개수 말이다. 그는 기하학적인 해석도 가능하게 하는 해법을 기록했다<sup><a href=\"#user-content-fn-2\" id=\"user-content-fnref-2\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup>.</p>\n<p>세 개의 피라미드를 결합해서 하나의 직각 각기둥(rectangular prism)을 구성할 수 있다. 이 각기둥의 한쪽 면에는 정육면체 하나의 높이와 같은 작은 돌출부가 생기는데 이 돌출부는 피타고라스 학파가 조약돌로 만든 삼각형과 동일한 규칙을 따른다(<a href=\"https://www.youtube.com/watch?v=aXbT37IlyZQ\">이 영상</a>을 참고하면 무슨 말인지 이해하는 데 도움이 될 수 있다). 따라서 전체 도형의 부피를 다음 수식으로 표현할 수 있다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo stretchy=\"false\">(</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">3(1^2 + 2^2 + 3^2 + \\ldots + n^2) = (n + 1)n^2 + (1 + 2 + 3 + \\ldots + n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>1부터 n까지의 정수 합에 대한 피타고라스 학파의 공식을 대입하고 약간의 연산을 하면 다음과 같은 식을 얻을 수 있다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>6</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">1^2 + 2^2 + 3^2 + \\ldots + n^2 = \\frac{n(n+1)(2n+1)}{6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>499년 인도의 수학자이자 천문학자인 아리아바타(Aryabhata)는 그의 저서 아리아바티야(Aryabhatiya)에 1부터 n까지의 정수의 세제곱의 합을 구하는 공식을 포함시켰다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>3</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><msup><mn>3</mn><mn>3</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>3</mn></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>n</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">1^3 + 2^3 + 3^3 + \\ldots + n^3 = (1 + 2 + 3 + \\ldots + n)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>그 후로도 1부터 n까지의 정수의 네제곱 합에 대한 공식이 출판되기까지는 500년이 더 걸렸다<sup><a href=\"#user-content-fn-3\" id=\"user-content-fnref-3\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">3</a></sup>.</p>\n<p>이 시점에서, 1부터 n까지의 정수의 k제곱수들의 합을 구하는 일반적인 방법이 있는지에 대한 의문이 들 수 있다. 당시의 수학자들도 같은 상각을 하고 있었다. 독일의 수학자이자 약간 괴짜 수비학자였던 요한 파울하버는 1부터 n까지의 정수들의 17제곱에 이르는 합을 구하는 공식을 1631년에 발표했다. 그러나 그는 이 과정에 몇 년을 소요했을 가능성이 높으며, 일반적인 해법을 밝히지 않았다<sup><a href=\"#user-content-fn-4\" id=\"user-content-fnref-4\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">4</a></sup>. 마침내 블레즈 파스칼이 1665년에 일반적인 방법을 제시했다. 하지만 이 방법은 k 제곱수들의 합을 구하기 위해 먼저 그보다 작은 모든 제곱수들의 합을 먼저 알아야 했다<sup><a href=\"#user-content-fn-5\" id=\"user-content-fnref-5\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">5</a></sup>. 예를 들어, 1부터 n까지의 정수의 6제곱 합을 구하려면, 먼저 1부터 n까지의 정수의 5제곱까지의 합을 계산하는 방법을 알고 있어야 했다.</p>\n<p>보다 실용적인 일반 해법은 1705년 사망한 스위스 수학자 야콥 베르누이의 사후 출판된 저서에 등장했다. 그는 1부터 n까지의 양의 정수들의 1제곱, 2제곱, 3제곱수들의 합을 계산하는 공식을 유도하는 데에서 시작했다<sup><a href=\"#user-content-fn-6\" id=\"user-content-fnref-6\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">6</a></sup>. 베르누이는 이 공식을 다항식의 형태로 표현했으며, 그 형태는 다음과 같았다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo>…</mo><mo>+</mo><mi>n</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 + 2 + 3 + \\ldots + n = \\frac{1}{2}n^2 + \\frac{1}{2}n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">n</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>6</mn></mfrac><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1^2 + 2^2 + 3^2 + \\ldots + n^2 = \\frac{1}{3}n^3 + \\frac{1}{2}n^2 + \\frac{1}{6}n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">n</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>3</mn></msup><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><msup><mn>3</mn><mn>3</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>3</mn></msup><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><msup><mi>n</mi><mn>4</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><msup><mi>n</mi><mn>2</mn></msup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">1^3 + 2^3 + 3^3 + \\ldots + n^3 = \\left(\\frac{1}{4}n^4 + \\frac{1}{2}n^3 + \\frac{1}{4}n^2\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></p>\n<p>파스칼의 삼각형을 활용하면서, 야콥 베르누이는 이 다항식들이 예측 가능한 패턴을 따른다는 사실을 깨달았다. 구체적으로 이야기하면, 베르누이는 각 항의 계수를 두 개의 요소로 나누었다. 하나는 파스칼의 삼각형을 이용해서 결정할 수 있었고 다른 하나는 다항식의 모든 계수를 더하면 항상 1이 되는 듯한 흥미로운 특성을 이용해서 유도할 수 있었다. 각 항에 붙어야 할 지수를 결정하는 것도 어렵지 않았다. 이 역시 예측 가능한 패턴을 따랐기 때문이다. 모든 계수의 합이 1이 된다는 규칙을 사용해 계산해야 했던 수들은 하나의 수열을 이루었고 이 수열은 이후 베르누이 수(Bernoulli numbers)로 불리게 되었다.</p>\n<p>베르누이의 발견이 1부터 n까지의 정수들의 어떤 제곱의 합도 쉽게 구할 수 있게 되었다는 의미는 아니었다. 1부터 n까지의 정수의 k제곱의 합을 구하기 위해서는 k번째 베르누이 수까지의 모든 베르누이 수를 알고 있어야 했다. 각 베르누이 수는 그 이전까지의 베르누이 수들을 알아야만 계산할 수 있었다. 하지만 베르누이 수열을 길게 계산하는 것은 각 제곱의 합의 공식을 하나씩 유도하는 것보다 훨씬 더 효율적이었다. 따라서 베르누이의 발견은 수학 발전에 있어 중대한 도약이 되었다.</p>\n<h1 id=\"배비지\">배비지</h1>\n<p>찰스 배비지(Charles Babbage)는 1791년에 태어났다. 베르누이가 사망한 지 약 한 세기가 지난 후였다. 나는 늘 배비지가 기계식 컴퓨터를 설계했으나 실제로 제작하지는 않았다는 어렴풋한 인식을 가지고 있었다. 하지만 그 컴퓨터가 어떻게 작동하도록 설계되었는지에 대해 제대로 이해한 적은 없었다. 다행히 그 기본 아이디어는 그렇게 어렵지 않다. 또한 러브레이스의 프로그램은 배비지가 설계한 기계 중 하나에서 실행되도록 만들어졌기 때문에 배비지의 기계가 어떻게 작동했는지 살펴볼 필요가 있다.</p>\n<p>배비지는 두 개의 서로 다른 기계적인 계산 장치를 설계했다. 첫 번째 기계는 차분 기관(Difference Engine)이라고 불렸다. 휴대용 계산기가 발명되기 전까지 사람들은 큰 수의 곱셈을 계산하기 위해 대수표(logarithmic table)를 사용했다. (이 과정에 대해 설명한 <a href=\"https://www.youtube.com/watch?v=VRzH4xB0GdM\">Numberphile의 좋은 영상</a>이 있다.) 대수표를 큰 규모로 제작하는 것은 적어도 개념적으로는 어렵지 않았다. 하지만 이를 실제로 작성하기 위해서 필요한 계산의 양은 엄청나게 많았기에 배비지가 살던 시대의 대수표에는 오류가 포함되어 있을 때가 많았다. 배비지는 이런 오류에 불만을 품고, 기계적으로 대수표를 작성하여 오류 없는 표를 만들 수 있는 기계를 만들고자 했다<sup><a href=\"#user-content-fn-7\" id=\"user-content-fnref-7\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">7</a></sup>.</p>\n<p>차분 기관은 덧셈과 뺄셈만 수행할 수 있었기 때문에 컴퓨터와는 다르다. 이 기계는 프랑스의 수학자 가스파르 드 프로니(Gaspard de Prony)가 개발한 방법을 활용했다. 대수표를 작성하는 과정을 작은 단계들로 분할하는 방식이었다<sup><a href=\"#user-content-fn-8\" id=\"user-content-fnref-8\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">8</a></sup>. 이 작은 단계들은 덧셈과 뺄셈만으로 구성되었기 때문에 특별한 수학적 적성이 없거나 훈련을 받지 않은 사람들도 대수표를 작성하는 작업에 참여할 수 있었다. 차분법(Method of Divided Differences)으로 알려진 이 방법을 사용하면 어떤 다항식도 표로 정리할 수 있었다. 더 나아가, 다항식은 로그 함수나 삼각 함수와 같은 복잡한 함수를 근사하는 데 사용할 수 있었다.</p>\n<p>이 과정이 어떻게 작동했는지 이해하기 위해서 다음과 같은 간단한 다항식 함수를 예로 들어보자.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y = x^2 + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>차분법은 서로 다른 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>값에 따라 나오는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>값들 사이의 차분(차이)을 구하는 방식이다. 그 다음 그 차이들의 차이를 구하고 경우에 따라서 그 차이들의 차이를 구하는 과정을 반복한다. 이 과정을 반복하다 보면 차이가 상수가 되는 지점이 나타난다. 이렇게 구한 차분들을 이용하면 단순히 덧셈을 통해서 다항식의 다음 값을 구할 수 있다.</p>\n<p>위에서 언급한 다항식이 2차 다항식이기 때문에 우리는 두 개의 차분 열(1차 차분, 2차 차분)만 계산해도 일정한 상수 차이를 얻을 수 있다.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>x</th><th>y</th><th>1차 차분</th><th>2차 차분</th></tr></thead><tbody><tr><td>1</td><td>2</td><td></td><td></td></tr><tr><td>2</td><td>5</td><td>3</td><td></td></tr><tr><td>3</td><td>10</td><td>5</td><td>2</td></tr><tr><td>4</td><td>17</td><td>7</td><td>2</td></tr><tr><td>5</td><td>?</td><td>?</td><td>2</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr></tbody></table>\n<p>이제 우리는 상수 차분이 2라는 사실을 알았다. 이를 이용해 x가 5일 때 y의 값을 덧셈만을 이용해 구할 수 있다. \"1차 차분\" 열의 마지막 항목인 7에 2를 더하면 9가 된다. 이어서, y 열의 마지막 항목인 17에 9를 더하면 26이 된다. 이것이 바로 우리가 구하던 답이다.</p>\n<p>배비지의 차분 기관에는 위와 같은 차분 표에 대응하는 물리적인 기어 열(column)이 있었다. 각 기어는 십진수의 한 자리를 나타냈고 하나의 열은 십진수 전체 숫자를 나타냈다. 차분 기관에는 8개의 기어 열이 있었으므로, 최대 7차 다항식까지의 표를 작성할 수 있었다. 기어 열의 초기 값들은 사전에 계산된 차분 표의 초기 행과 같은 값으로 설정되었다. 그다음 작업자가 크랭크 축을 돌리면 상수 차분이 기계 전체에 전파되면서 각 기어 열에 저장된 값이 다음 열의 값에 더해졌다.</p>\n<p>배비지는 차분 기관의 일부분을 실제로 제작할 수 있었고 파티에서 자신의 아이디어를 시연하기도 했다.<sup><a href=\"#user-content-fn-9\" id=\"user-content-fnref-9\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">9</a></sup> 그러나 대형 전함 두 척을 건조할 수 있을 정도의 공공 자금을 투입했음에도 불구하고, 배비지는 완전한 차분 기관을 끝내 제작하지 못했다.<sup><a href=\"#user-content-fn-10\" id=\"user-content-fnref-10\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">10</a></sup> 충분한 정밀도를 가진 기어를 만들 수 있는 사람을 1800년대 초반에는 찾을 수 없었기 때문이다. 실제로 작동 가능한 차분 기관은 정밀 절삭 기술이 발전한 1990년대에 들어서야 제작되었다. 현재 마운틴뷰에 있는 컴퓨터 역사 박물관에 대여 중인 작동 가능한 차분기관을 시연하는 <a href=\"https://www.youtube.com/watch?v=BlbQsKpq3Ak\">훌륭한 유튜브 영상</a>이 있다. 기계가 작동할 때 나는 웅장한 소리를 듣기 위해서라도 볼 가치가 충분하다.</p>\n<p>배비지는 결국 차분 기관에 대한 흥미를 잃게 된다. 훨씬 더 강력하고 유연한 기계를 설계할 수 있다는 사실을 깨달았기 때문이다. 그가 새로 구상한 해석 기관(Analytical Engine)이 우리가 오늘날 배비지의 기계식 컴퓨터로 알고 있는 그것이다. 해석 기관은 차분 기관의 기어 열을 기반으로 했다. 하지만 차분 기관이 8개의 열만을 사용하는 것과 달리, 해석 기관은 수백 개의 열을 가질 예정이었다. 해석 기관은 자카르 방직기(Jacquard Loom, 역자: 천공 카드를 이용해서 어떤 패턴으로 직물을 짤지 정할 수 있었다)처럼 천공 카드(punched card)를 이용해서 프로그램을 작성할 수 있었다. 또한 덧셈과 뺄셈뿐 아니라 곱셈과 나눗셈도 수행할 수 있었다. 연산을 수행하기 위해서는 해석 기관에서 \"공장(mill)\"이라고 불리는 부분이 적절한 구성으로 스스로 재배열되었다. 그런 다음, 데이터 저장용으로 사용되는 다른 기어 열로부터 피연산자(operand)를 읽어들여, 연산을 수행한 후 결과를 다시 다른 열에 기록했다.</p>\n<p>배비지는 이 새로운 기계를 해석 기관이라고 불렀다. 이 기계가 수학적인 해석(mathematical analysis)과 같은 걸 수행할 수 있을 정도로 강력했기 때문이다. 차분 기관은 다항식의 표를 작성하는 것밖에 할 수 없었지만 해석 기관은 다른 표현식의 다항식 전개의 계수를 계산하는 등의 작업도 수행할 수 있었다. 이 기계는 경이로운 발명품이었지만 영국 정부는 해석 기관에 대한 자금 지원을 거절했다. 배비지는 자신의 아이디어를 지원받아 보려고 이탈리아로 갔다.</p>\n<h1 id=\"에이다-러브레이스가-번역하며-남긴-주석\">에이다 러브레이스가 번역하며 남긴 주석</h1>\n<p>토리노에서 배비지는 이탈리아 공학자이자 미래의 총리인 루이지 메나브레아(Luigi Menabrea)를 만났다. 배비지는 메나브레아를 설득해 해석 기관이 할 수 있는 일의 개요를 작성하게 했다. 1842년, 메나브레아는 이 주제를 다룬 논문을 프랑스어로 출판했다. 이듬해, 에이다 러브레이스(Ada Lovelace)는 메나브레아의 논문을 영어로 번역해 출판했다.</p>\n<p>당시에는 에이다 바이런으로 알려져 있던 러브레이스는 1833년 파티에서 배비지를 처음 만났다. 당시 러브레이스는 17살이었고 배비지는 41살이었다.<sup><a href=\"#user-content-fn-11\" id=\"user-content-fnref-11\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">11</a></sup> 러브레이스는 배비지의 차분 기관에 매료되었다. 그녀는 어린 시절부터 철저한 수학 교육을 받아 왔기 때문에 그 기계가 어떻게 작동하는지 이해할 수 있었다. 러브레이스의 어머니 애나벨라 밀뱅크(Annabella Milbanke)는 철저한 수학 교육이 러브레이스의 아버지였던 유명한 시인 바이런 경의 낭만적인 감수성을 물리칠 수 있을 거라고 생각했다. 1833년의 첫 만남 이후 러브레이스와 배비지는 동일한 사교계의 일원으로 지냈으며 서로 자주 서신을 주고받았다.</p>\n<p>1835년 에이다 바이런은 윌리엄 킹(William King)과 결혼했다. 킹은 이후에 러브레이스 백작 작위를 얻었고 에아다는 러브레이스 백작부인이 되었다. 러브레이스는 3명의 자녀를 낳은 뒤에도 수학 공부를 계속했다. 드 모르간의 법칙으로 유명한 오거스터스 드 모르간(Augustus de Morgan)을 개인 교사로 고용하기도 했다.<sup><a href=\"#user-content-fn-12\" id=\"user-content-fnref-12\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">12</a></sup> 러브레이스는 배비지의 해석 기관이 가진 잠재력을 바로 알아보았으며 그 개념을 발전시키기 위해 배비지와 함께 일하고 싶어했다. 한 친구가 그녀에게 메나브레아의 논문을 영어로 번역하는 걸 제안했다.<sup><a href=\"#user-content-fn-13\" id=\"user-content-fnref-13\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">13</a></sup></p>\n<p>메나브레아의 논문은 차분 기관의 작동 방식에 대한 간략한 개요를 제시하고 해석 기관이 훨씬 더 우수한 기계임을 보였다. 논문에 의하면 해석 기관은 \"20자리 숫자 두 개의 곱을 <em>3분</em>만에 구할 수 있\"을 만큼 강력했다.<sup><a href=\"#user-content-fn-14\" id=\"user-content-fnref-14\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">14</a></sup>(원문에도 강조 표시가 있음) 메나브레아는 해석 기관의 더 다양한 기능도 설명했다. 단순한 선형 연립 방정식을 해결하는 것과 두 이항식의 곱을 전개하는 등이었다. 두 경우 모두에 대해서 메나브레아는 정확한 답을 계산하기 위해 수행해야 하는 연산의 순서를 나열한 목록을 제공했다. 러브레이스는 이를 \"과정 도표(diagrams of development)\"라고 불렀다.<sup><a href=\"#user-content-fn-15\" id=\"user-content-fnref-15\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">15</a></sup> 이 도표들은 러브레이스가 작성한 프로그램과 같은 차원에서 프로그램이라고 할 수 있으며 이는 러브레이스의 프로그램보다 몇 년 앞서 나왔다. 하지만 앞으로 살펴보겠지만 메나브레아의 프로그램들은 가능성을 보여주는 단순한 예시에 불과했다. 이 프로그램들은 분기나 반복이 필요하지 않다는 점에서 사소한 수준의 예시로 간주된다.</p>\n<p>러브레이스는 메나브레아의 논문을 영어로 번역하면서 원문보다 훨씬 더 긴 주석들을 추가했다. 바로 이 주석이 러브레이스가 컴퓨터 과학에 미친 주요 공헌이다. A번 주석은 해석 기관에 대한 메나브레아의 초기 설명에 대해 러브레이스가 추가한 것이다. 여기서 러브레이스는 기계가 임의의 수학적 연산을 수행할 수 있는 가능성에 대해 상당히 자세하고 시적으로 설명한다. 그녀는 해석 기관이 단순히 숫자에 국한되지 않고 \"추상적인 연산으로 그 관계가 표현될 수 있는 모든 객체에 작용\"할 수 있으며 \"해석 기관의 연산 표기법과 작동 방식에도 적용할 수 있을 것\"이라고 예견했다.<sup><a href=\"#user-content-fn-16\" id=\"user-content-fnref-16\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">16</a></sup> 그녀는 이 기계가 언젠가 작곡도 할 수 있을 거라고 덧붙였다. 이 통찰은 더욱 놀라웠다. 메나브레아는 해석 기관을 주로 \"길고 지루한 계산을 자동화\"하여 훌륭한 과학자들의 지적 능력을 해방시켜 더 심화된 사고를 할 수 있도록 해주는 도구로 보았기 때문이다.<sup><a href=\"#user-content-fn-17\" id=\"user-content-fnref-17\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">17</a></sup> 러브레이스가 A번 주석에서 보여준 놀라운 선견지명은 오늘날 그녀가 유명해진 주요 이유 중 하나이다.</p>\n<p>G번 주석도 유명하다. 러브레이스는 G번 주석의 서두에서 해석 기관이 매우 강력하기는 하지만 진정한 의미에서 \"생각\"하는 것은 아니라고 주장한다. G번 주석의 이 부분은 훗날 앨런 튜링이 \"레이디 러브레이스의 반박(Lady Lovelace’s Objection)\"이라고 언급하는 바로 그 부분이다. 그럼에도 불구하고 러브레이스는 이 기계가 특별한 능력을 발휘할 수 있다고 말을 이었다. 해석 기관이 더 복잡한 프로그램도 다룰 수 있다는 것을 보이기 위해 러브레이스는 베르누이 수를 계산하는 자신의 프로그램을 제공한다.</p>\n<p>러브레이스가 D번 주석에서 설명한 확장된 \"과정 도표\" 형식으로 작성된 전체 프로그램은 <a href=\"https://upload.wikimedia.org/wikipedia/commons/c/cf/Diagram_for_the_computation_of_Bernoulli_numbers.jpg\">여기</a>에서 확인할 수 있다. 이 프로그램은 기본적으로 수학 기호를 사용해서 서술된 연산 목록이다. 배비지나 러브레이스가 해석 기관을 위해서 오늘날의 명령어(op code)와 같은 것을 개발했는지는 명확하지 않다.</p>\n<p>러브레이스는 일정 한계까지의 모든 베르누이 수들을 계산하는 방법을 설명했지만 그녀가 제시한 프로그램은 그 과정 중 하나의 단계만을 예시하고 있다. 그녀의 프로그램은 그녀가 B7이라고 부른 수를 계산했다. 이 수는 현대 수학자들이 8번째 베르누이 수라고 부르는 것이다. 즉 그녀의 프로그램은 다음의 방정식을 풀고자 했다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mn>7</mn></msub><mo>=</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">(</mo><msub><mi>A</mi><mn>0</mn></msub><mo>+</mo><msub><mi>B</mi><mn>1</mn></msub><msub><mi>A</mi><mn>1</mn></msub><mo>+</mo><msub><mi>B</mi><mn>3</mn></msub><msub><mi>A</mi><mn>3</mn></msub><mo>+</mo><msub><mi>B</mi><mn>5</mn></msub><msub><mi>A</mi><mn>5</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B_7 = -1(A_0 + B_{1}A_{1} + B_{3}A_{3} + B_{5}A_{5})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>위 식에서 각 항은 특정 거듭제곱에 대한 정수의 합을 나타내는 다항식에서 각 계수를 나타낸다. 여기서 거듭제곱은 8이다. 8번째 베르누이 수가 8제곱을 한 정수들의 합(역자: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>1</mn><mn>8</mn></msup><mo>+</mo><msup><mn>2</mn><mn>8</mn></msup><mo>+</mo><mo>…</mo><mo>+</mo><msup><mi>n</mi><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">1^8 + 2^8 + \\ldots + n^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span> 형태)을 나타내는 식에서 처음으로 등장하기 때문이다. 위 식에서의 B와 A의 값은 베르누이가 발견한 두 가지 종류의 계수 요소를 나타낸다. B1부터 B7까지는 러브레이스의 인덱싱 방식에 따라 번호가 매겨진 각각 다른 베르누이 수를 나타낸다. A0부터 A5까지는 베르누이가 파스칼의 삼각형을 이용해서 계산할 수 있었던 계수의 요소들을 나타낸다. A0, A1, A3, A5의 값은 아래에 적는다. 여기서 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>은 홀수 번째 베르누이 수의 수열에서의 인덱스를 나타내며 인덱스는 1부터 시작한다. 러브레이스의 프로그램은 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">n = 4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">4</span></span></span></span>를 사용했다.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>⋅</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A_0 = -\\frac{1}{2} \\cdot \\frac{2n-1}{2n+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">A_1 = \\frac{2n}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mn>2</mn><mo>⋅</mo><mn>3</mn><mo>⋅</mo><mn>4</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A_3 = \\frac{2n(2n-1)(2n-2)}{2 \\cdot 3 \\cdot 4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">3</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>5</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>4</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mn>2</mn><mo>⋅</mo><mn>3</mn><mo>⋅</mo><mn>4</mn><mo>⋅</mo><mn>5</mn><mo>⋅</mo><mn>6</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A_5 = \\frac{2n(2n-1)(2n-2)(2n-3)(2n-4)}{2 \\cdot 3 \\cdot 4 \\cdot 5 \\cdot 6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">3</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">4</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">5</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mtight\">6</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">)</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">4</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>나는 러브레이스의 프로그램을 <a href=\"https://gist.github.com/sinclairtarget/ad18ac65d277e453da5f479d6ccfc20e\">C언어로 변환한 버전</a>을 만들었으며 이게 이해하기 더 쉬울 수 있다. 러브레이스의 프로그램은 먼저 A0와 B1A1의 곱을 계산한다. 그 다음 B3A3과 B5A5를 계산하기 위해 두 번 반복되는 루프에 진입한다. 이들이 동일한 패턴을 따르기 때문이다. 각 곱셈 연산의 값이 계산될 때마다 이전의 모든 곱과 더해지고, 따라서 프로그램이 종료될 때 최종 합계가 완성된다.</p>\n<p>내가 C언어로 변환한 프로그램이 러브레이스의 프로그램과 정확히 일치하지는 않는다. 예를 들어 C 프로그램에서 변수는 스택에 선언되지만 러브레이스의 프로그램에서의 변수는 레지스터에 더 가깝다. 하지만 이 변환은 러브레이스의 프로그램이 얼마나 선구적이었는지 명확히 보여준다. C 프로그램은 2개의 <code>while</code> 반복문이 있으며 하나는 다른 하나에 중첩(nested)되어 있다. 러브레이스의 프로그램에 <code>while</code> 루프가 명시적으로 존재했던 건 아니지만 그녀는 연산을 그룹화하고 해당 연산 그룹이 반복되어야 하는 시점을 문장으로 명확하게 지정했다. 러브레이스의 프로그램과 그 C 변환에서 변수 <code>v10</code>은 각 반복마다 감소하는 카운터 변수로 사용된다. 이 방식은 모든 프로그래머에게 친숙한 구조일 것이다. 기능 파악에 도움이 되지 않는 이름을 가진 변수들이 많다는 것을 제외하면 러브레이스의 프로그램을 C로 번역한 코드는 오늘날에도 그렇게 낯설지 않다.</p>\n<p>또한 러브레이스의 프로그램을 C로 변환하는 작업이 그렇게 어렵지 않았다는 사실도 간략히 언급할 가치가 있다. 러브레이스의 도표에 담긴 세부적인 설명들 덕분이었다. 메나브레아의 표와 달리 러브레이스가 만든 표에는 \"어떤 변수의 값이 변경되는 것에 대한 표시\"라는 레이블이 붙은 열이 포함되어 있었고 이 정보 덕분에 프로그램의 상태 변화를 추적하는 것이 훨씬 쉬웠다. 러브레이스는 해당 변수가 프로그램의 시작 이후 몇 번째로 할당된 값을 사용하고 있는지를 나타내기 위해서 윗첨자 인덱스를 추가했다. 예를 들어 윗첨자 2는 이 변수가 프로그램이 시작된 이후 두 번째로 할당된 값을 사용하고 있음을 의미한다.</p>\n<h1 id=\"최초의-프로그래머?\">최초의 프로그래머?</h1>\n<p>러브레이스의 프로그램을 C로 변환한 후 나는 내 컴퓨터에서 이를 실행해 보았다. 좌절스럽게도 결과가 계속 잘못 나왔다. 디버깅을 거친 끝에 문제는 내가 작성한 코드에 있지 않다는 것을 깨달았다. 버그는 원본 프로그램 자체에 있었던 것이다!</p>\n<p>러브레이스의 \"과정 도표\"를 보면 러브레이스는 4번째 연산을 <code>v5 / v4</code>라고 썼다. 하지만 <code>v4 / v5</code>로 쓰는 것이 맞다. 이 오류는 러브레이스가 작성한 프로그램의 오류라기보다는 조판(typesetting) 오류일 수도 있다. 어느 쪽이든 이는 컴퓨팅 역사상 가장 오래된 버그일 수 있다. 나는 역사상 최초일 수도 있는 버그와 나도 모르는 사이에 약 10분 동안이나 씨름하고 있었다는 사실에 경이로움을 느꼈다.</p>\n<p><a href=\"https://enigmaticcode.wordpress.com/tag/bernoulli-numbers/\">러브레이스의 프로그램을 파이썬으로 변환</a>한 다른 블로거인 짐 란델(Jim Randall) 역시 이 나눗셈 오류와 두 가지의 추가적인 문제를 지적한 바 있다. 그런데 에이다 러브레이스의 프로그램에 작은 버그들이 포함되어 있다는 사실이 오히려 러브레이스가 단순한 시험용이 아니라 실제 프로그램을 작성하려고 했다는 증거일지도 모른다. 장난감 프로그램 이상의 무언가를 작성하고 있다면 많은 버그들 또한 같이 만들고 있는 게 당연하지 않겠는가?</p>\n<p>위키백과의 한 기사는 \"복잡한 프로그램\"<sup><a href=\"#user-content-fn-18\" id=\"user-content-fnref-18\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">18</a></sup>을 최초로 출판한 사람으로 러브레이스를 묘사한다. 어쩌면 이것이 러브레이스의 업적을 이해하는 올바른 방식일지도 모른다. 메나브레아는 러브레이스가 그녀의 번역본을 출판하기 1년 전에, 그의 논문에 있는 \"과정 도표\"를 출판했다. 배비지 역시 출판되지 않은 20개 이상의 프로그램을 작성했다.<sup><a href=\"#user-content-fn-19\" id=\"user-content-fnref-19\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">19</a></sup> 따라서 러브레이스가 처음으로 프로그램을 작성했거나 출판했다고 말하는 것은 엄밀히 말해 정확하지 않다. 물론 \"프로그램\"이라는 게 정확히 무엇을 의미하는지에 대한 논쟁의 여지는 항상 남아 있지만 말이다. 그럼에도 불구하고 러브레이스의 프로그램은 그 이전에 출판된 모든 것보다 훨씬 앞서 있었다. 메나브레아가 제시한 가장 긴 프로그램은 11단계의 연산으로 이루어져 있었고 반복문이나 분기도 포함되지 않았다. 러브레이스의 프로그램은 25개의 연산이 포함되어 있고 중첩된 반복문(따라서 분기도)이 포함되어 있다. 메나브레아는 그의 논문 말미에 다음과 같이 썼다.</p>\n<blockquote>\n<p>해석 기관이 만들어지게 되면 남은 과제는 카드를 만드는 작업으로 간단해질 것이다. 이 작업은 단순히 수학적인 공식의 변환에 불과하기 때문에 몇 가지 간단한 표기법만 사용하면 작업자에게 그 실행을 맡기는 것은 쉬울 것이다.<sup><a href=\"#user-content-fn-20\" id=\"user-content-fnref-20\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">20</a></sup></p>\n</blockquote>\n<p>배비지와 메나브레아는 눈앞에 닥친 수학적인 문제 이상의 무언가를 위해서 해석 기관을 사용하는 것에 특별한 관심이 없었다. 배비지가 처음 계산기를 만들게 된 동기도 수학적인 계산이었다. 반면 러브레이스는 해석 기관이 배비지와 메나브레아가 상상한 것 이상으로 많은 것을 할 수 있다는 가능성을 보았다. 러브레이스는 또한 \"카드를 만드는 작업\"이 단순한 사후 작업이 아니며 잘할 수도 있고 형편없이 할 수도 있는 작업임을 인지했다. 이 점은 G번 주석에 있는 그녀의 프로그램을 직접 분석하고 그녀가 프로그램을 설계할 때 얼마나 신중하게 접근했는지를 확인하지 않으면 인식하기 어렵다. 하지만 그녀의 프로그램을 정말로 이해하고 나면 러브레이스가 \"최초의 프로그래머\"라는 명칭에 정말 걸맞은 사람이라는 데에 동의하게 될 것이다. 그녀가 정말 처음으로 프로그램을 작성한 사람이 아님에도 불구하고 말이다.</p>\n<p><em>만약 이 글이 재미있었다면, 비슷한 글이 4주마다 올라옵니다! 트위터에서 @TwoBitHistory를 팔로우하거나, RSS 피드를 구독하여 새로운 글이 올라올 때 놓치지 않도록 하세요.</em></p>\n<p>원작자의 번역 허가 메일</p>\n<p><img src=\"/static/image-1be50829.png\" alt=\"번역 허가\"></p>\n<section data-footnotes=\"\" class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p>Walter Isaacson, The Innovators (New York: Simon &#x26; Schuster Paperbacks, 2015), 25(번역서는 월터 아이작슨 저, 정영목 역, 『이노베이터 - 창의적인 삶으로 나아간 천재들의 비밀』, 오픈하우스, 2015). <a href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-2\">\n<p><a href=\"https://old.maa.org/press/periodicals/convergence/sums-of-powers-of-positive-integers-archimedes-287-212-bce-greece-italy\">Janet Beery, \"Sums of Powers of Positive Integers: Archimedes\", Mathematical Association of America, accessed August 18, 2018</a> <a href=\"#user-content-fnref-2\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-3\">\n<p><a href=\"https://old.maa.org/press/periodicals/convergence/sums-of-powers-of-positive-integers-abu-ali-al-hasan-ibn-al-hasan-ibn-al-haytham-965-1039-egypt\">Janet Beery, \"Sums of Powers of Positive Integers: Abu Ali Al-Hasan Ibn Al-Hasan Ibn Al-Haytham\", Mathematical Association of America, accessed August 18, 2018</a> <a href=\"#user-content-fnref-3\" data-footnote-backref=\"\" aria-label=\"Back to reference 3\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-4\">\n<p><a href=\"https://old.maa.org/press/periodicals/convergence/sums-of-powers-of-positive-integers-conclusion\">Janet Beery, \"Sums of Powers of Positive Integers: Conclusion\", Mathematical Association of America, accessed August 18, 2018</a> <a href=\"#user-content-fnref-4\" data-footnote-backref=\"\" aria-label=\"Back to reference 4\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-5\">\n<p><a href=\"https://old.maa.org/press/periodicals/convergence/sums-of-powers-of-positive-integers-blaise-pascal-1623-1662-france\">Janet Beery, \"Sums of Powers of Positive Integers: Blaise Pascal\", Mathematical Association of America, accessed August 18, 2018</a> <a href=\"#user-content-fnref-5\" data-footnote-backref=\"\" aria-label=\"Back to reference 5\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-6\">\n<p><a href=\"https://old.maa.org/press/periodicals/convergence/sums-of-powers-of-positive-integers-jakob-bernoulli-1654-1705-switzerland\">Janet Beery, \"Sums of Powers of Positive Integers: Jakob Bernoulli\", Mathematical Association of America, accessed August 18, 2018</a> <a href=\"#user-content-fnref-6\" data-footnote-backref=\"\" aria-label=\"Back to reference 6\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-7\">\n<p>Isaacson, 19 <a href=\"#user-content-fnref-7\" data-footnote-backref=\"\" aria-label=\"Back to reference 7\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-8\">\n<p>Isaacson, 20 <a href=\"#user-content-fnref-8\" data-footnote-backref=\"\" aria-label=\"Back to reference 8\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-9\">\n<p><a href=\"https://www.youtube.com/watch?v=BlbQsKpq3Ak&#x26;t=457s\">Robert Scoble, \"A Demo of Charles Babbage’s Difference Engine,\" YouTube, June 17, 2010, accessed August 18, 2018</a> <a href=\"#user-content-fnref-9\" data-footnote-backref=\"\" aria-label=\"Back to reference 9\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-10\">\n<p>Isaacson, 22 <a href=\"#user-content-fnref-10\" data-footnote-backref=\"\" aria-label=\"Back to reference 10\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-11\">\n<p>Isaacson, 8 <a href=\"#user-content-fnref-11\" data-footnote-backref=\"\" aria-label=\"Back to reference 11\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-12\">\n<p>Isaacson, 17 <a href=\"#user-content-fnref-12\" data-footnote-backref=\"\" aria-label=\"Back to reference 12\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-13\">\n<p>Isaacson, 25 <a href=\"#user-content-fnref-13\" data-footnote-backref=\"\" aria-label=\"Back to reference 13\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-14\">\n<p><a href=\"https://books.google.co.kr/books/about/Scientific_Memoirs_Selected_from_the_Tra.html?id=qsY-AAAAYAAJ&#x26;redir_esc=y\">Luigi Menabrea, \"Sketch of the Analytical Engine\", Scientific Memoirs 3 (1843): 686, accessed August 18, 2018</a> <a href=\"#user-content-fnref-14\" data-footnote-backref=\"\" aria-label=\"Back to reference 14\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-15\">\n<p><a href=\"https://books.google.co.kr/books/about/Scientific_Memoirs_Selected_from_the_Tra.html?id=qsY-AAAAYAAJ&#x26;redir_esc=y\">Ada Lovelace, \"Translator’s Notes to M. Menabrea’s Memoir\", Scientific Memoirs 3 (1843): 712, accessed August 18, 2018</a> <a href=\"#user-content-fnref-15\" data-footnote-backref=\"\" aria-label=\"Back to reference 15\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-16\">\n<p>Lovelace, 694 <a href=\"#user-content-fnref-16\" data-footnote-backref=\"\" aria-label=\"Back to reference 16\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-17\">\n<p>Menabrea, 690 <a href=\"#user-content-fnref-17\" data-footnote-backref=\"\" aria-label=\"Back to reference 17\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-18\">\n<p><a href=\"https://en.wikipedia.org/wiki/Bernoulli_number\">\"Bernoulli number\", Wikipedia, accessed August 18, 2018</a> <a href=\"#user-content-fnref-18\" data-footnote-backref=\"\" aria-label=\"Back to reference 18\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-19\">\n<p>Isaacson, 29 <a href=\"#user-content-fnref-19\" data-footnote-backref=\"\" aria-label=\"Back to reference 19\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n<li id=\"user-content-fn-20\">\n<p>Menabrea, 689 <a href=\"#user-content-fnref-20\" data-footnote-backref=\"\" aria-label=\"Back to reference 20\" class=\"data-footnote-backref\">↩</a></p>\n</li>\n</ol>\n</section>",
    "headingTree": [
      {
        "title": "제곱수들의 합",
        "url": "#제곱수들의-합",
        "items": []
      },
      {
        "title": "배비지",
        "url": "#배비지",
        "items": []
      },
      {
        "title": "에이다 러브레이스가 번역하며 남긴 주석",
        "url": "#에이다-러브레이스가-번역하며-남긴-주석",
        "items": []
      },
      {
        "title": "최초의 프로그래머?",
        "url": "#최초의-프로그래머?",
        "items": []
      }
    ],
    "url": "/translations/what-did-ada-lovelace-program-actually-do",
    "thumbnail": {
      "local": "/static/triangular_numbers1-9fbf1cc6.png"
    }
  }
]